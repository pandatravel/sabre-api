<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\OrderManagement\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class ServiceNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\OrderManagement\\Service';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Ammonkc\SabreApi\Model\OrderManagement\Service;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\OrderManagement\Service();
        if (property_exists($data, 'id')) {
            $object->setId($data->{'id'});
        }
        if (property_exists($data, 'externalId')) {
            $object->setExternalId($data->{'externalId'});
        }
        if (property_exists($data, 'statusCode')) {
            $object->setStatusCode($data->{'statusCode'});
        }
        if (property_exists($data, 'passengerRefId')) {
            $object->setPassengerRefId($data->{'passengerRefId'});
        }
        if (property_exists($data, 'segmentRefId')) {
            $object->setSegmentRefId($data->{'segmentRefId'});
        }
        if (property_exists($data, 'pnrSegmentNumber')) {
            $object->setPnrSegmentNumber($data->{'pnrSegmentNumber'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getId()) {
            $data->{'id'} = $object->getId();
        }
        if (null !== $object->getExternalId()) {
            $data->{'externalId'} = $object->getExternalId();
        }
        if (null !== $object->getStatusCode()) {
            $data->{'statusCode'} = $object->getStatusCode();
        }
        if (null !== $object->getPassengerRefId()) {
            $data->{'passengerRefId'} = $object->getPassengerRefId();
        }
        if (null !== $object->getSegmentRefId()) {
            $data->{'segmentRefId'} = $object->getSegmentRefId();
        }
        if (null !== $object->getPnrSegmentNumber()) {
            $data->{'pnrSegmentNumber'} = $object->getPnrSegmentNumber();
        }

        return $data;
    }
}
