<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\ThemeAirportLookup;

use Ammonkc\SabreApi\AbstractModel;

class ThemeAirportLookupResponseDestinationsItem extends AbstractModel
{
    /**
     * The 3-letter IATA airport or multi-airport city (MAC) code that is associated with the theme in the request.
     *
     * @var string
     */
    protected $destination;
    /**
     * The type of response that corresponds to `Destination`.

    'City' Type reflects a multi-airport city (MAC) destination response; whereas, 'Airport' Type reflects an airport code destination.

     *
     * @var string
     */
    protected $type;
    /**
     * Array of links for different types of relations, e.g. self, linkTemplate, shop.
     *
     * @var ThemeAirportLookupResponseDestinationsItemLinksItem[]
     */
    protected $links;

    /**
     * The 3-letter IATA airport or multi-airport city (MAC) code that is associated with the theme in the request.
     *
     * @return string
     */
    public function getDestination(): ?string
    {
        return $this->destination;
    }

    /**
     * The 3-letter IATA airport or multi-airport city (MAC) code that is associated with the theme in the request.
     *
     * @param string $destination
     *
     * @return self
     */
    public function setDestination(?string $destination): self
    {
        $this->destination = $destination;

        return $this;
    }

    /**
     * The type of response that corresponds to `Destination`.

    'City' Type reflects a multi-airport city (MAC) destination response; whereas, 'Airport' Type reflects an airport code destination.

     *
     * @return string
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * The type of response that corresponds to `Destination`.

    'City' Type reflects a multi-airport city (MAC) destination response; whereas, 'Airport' Type reflects an airport code destination.

     *
     * @param string $type
     *
     * @return self
     */
    public function setType(?string $type): self
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Array of links for different types of relations, e.g. self, linkTemplate, shop.
     *
     * @return ThemeAirportLookupResponseDestinationsItemLinksItem[]
     */
    public function getLinks(): ?array
    {
        return $this->links;
    }

    /**
     * Array of links for different types of relations, e.g. self, linkTemplate, shop.
     *
     * @param ThemeAirportLookupResponseDestinationsItemLinksItem[] $links
     *
     * @return self
     */
    public function setLinks(?array $links): self
    {
        $this->links = $links;

        return $this;
    }
}
