<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\AirlineLookup\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class AirlinesLookupResponseAirlineInfoItemNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\AirlineLookup\\AirlinesLookupResponseAirlineInfoItem';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Ammonkc\SabreApi\Model\AirlineLookup\AirlinesLookupResponseAirlineInfoItem;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\AirlineLookup\AirlinesLookupResponseAirlineInfoItem();
        if (property_exists($data, 'AirlineCode')) {
            $object->setAirlineCode($data->{'AirlineCode'});
        }
        if (property_exists($data, 'AirlineName')) {
            $object->setAirlineName($data->{'AirlineName'});
        }
        if (property_exists($data, 'AlternativeBusinessName')) {
            $object->setAlternativeBusinessName($data->{'AlternativeBusinessName'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAirlineCode()) {
            $data->{'AirlineCode'} = $object->getAirlineCode();
        }
        if (null !== $object->getAirlineName()) {
            $data->{'AirlineName'} = $object->getAirlineName();
        }
        if (null !== $object->getAlternativeBusinessName()) {
            $data->{'AlternativeBusinessName'} = $object->getAlternativeBusinessName();
        }

        return $data;
    }
}
