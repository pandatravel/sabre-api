<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\AdvancedCalendarSearch\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class AdvancedCalendarSearchResponseOTAAirLowFareSearchRSNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\AdvancedCalendarSearch\\AdvancedCalendarSearchResponseOTAAirLowFareSearchRS';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Ammonkc\SabreApi\Model\AdvancedCalendarSearch\AdvancedCalendarSearchResponseOTAAirLowFareSearchRS;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\AdvancedCalendarSearch\AdvancedCalendarSearchResponseOTAAirLowFareSearchRS();
        if (property_exists($data, 'PricedItinCount')) {
            $object->setPricedItinCount($data->{'PricedItinCount'});
        }
        if (property_exists($data, 'BrandedOneWayItinCount')) {
            $object->setBrandedOneWayItinCount($data->{'BrandedOneWayItinCount'});
        }
        if (property_exists($data, 'SimpleOneWayItinCount')) {
            $object->setSimpleOneWayItinCount($data->{'SimpleOneWayItinCount'});
        }
        if (property_exists($data, 'DepartedItinCount')) {
            $object->setDepartedItinCount($data->{'DepartedItinCount'});
        }
        if (property_exists($data, 'SoldOutItinCount')) {
            $object->setSoldOutItinCount($data->{'SoldOutItinCount'});
        }
        if (property_exists($data, 'AvailableItinCount')) {
            $object->setAvailableItinCount($data->{'AvailableItinCount'});
        }
        if (property_exists($data, 'Version')) {
            $object->setVersion($data->{'Version'});
        }
        if (property_exists($data, 'Success')) {
            $object->setSuccess($data->{'Success'});
        }
        if (property_exists($data, 'Warnings')) {
            $object->setWarnings($this->denormalizer->denormalize($data->{'Warnings'}, 'Ammonkc\\SabreApi\\Model\\AdvancedCalendarSearch\\AdvancedCalendarSearchResponseOTAAirLowFareSearchRSWarnings', 'json', $context));
        }
        if (property_exists($data, 'PricedItineraries')) {
            $values = [];
            foreach ($data->{'PricedItineraries'} as $value) {
                $values[] = $this->denormalizer->denormalize($value, 'Ammonkc\\SabreApi\\Model\\AdvancedCalendarSearch\\PricedItinerariesItem', 'json', $context);
            }
            $object->setPricedItineraries($values);
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getPricedItinCount()) {
            $data->{'PricedItinCount'} = $object->getPricedItinCount();
        }
        if (null !== $object->getBrandedOneWayItinCount()) {
            $data->{'BrandedOneWayItinCount'} = $object->getBrandedOneWayItinCount();
        }
        if (null !== $object->getSimpleOneWayItinCount()) {
            $data->{'SimpleOneWayItinCount'} = $object->getSimpleOneWayItinCount();
        }
        if (null !== $object->getDepartedItinCount()) {
            $data->{'DepartedItinCount'} = $object->getDepartedItinCount();
        }
        if (null !== $object->getSoldOutItinCount()) {
            $data->{'SoldOutItinCount'} = $object->getSoldOutItinCount();
        }
        if (null !== $object->getAvailableItinCount()) {
            $data->{'AvailableItinCount'} = $object->getAvailableItinCount();
        }
        if (null !== $object->getVersion()) {
            $data->{'Version'} = $object->getVersion();
        }
        if (null !== $object->getSuccess()) {
            $data->{'Success'} = $object->getSuccess();
        }
        if (null !== $object->getWarnings()) {
            $data->{'Warnings'} = $this->normalizer->normalize($object->getWarnings(), 'json', $context);
        }
        if (null !== $object->getPricedItineraries()) {
            $values = [];
            foreach ($object->getPricedItineraries() as $value) {
                $values[] = $this->normalizer->normalize($value, 'json', $context);
            }
            $data->{'PricedItineraries'} = $values;
        }

        return $data;
    }
}
