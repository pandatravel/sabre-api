<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoSecureFlightItem extends AbstractModel
{
    /**
     * Used to pass the country of issue for 'KnownTravelerNumber' or 'RedressNumber'.
     *
     * @var string
     */
    protected $issueCountry;
    /**
     * The known traveler number.
     * 'KnownTravelerNumber' cannot be combined with 'PersonName.DateOfBirth' or  'PersonName.Gender' and 'RedressNumber'.
     *
     * @var string
     */
    protected $knownTravelerNumber;
    /**
     * The personal details.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoSecureFlightItemPersonName
     */
    protected $personName;
    /**
     * The redress number.
     * 'RedressNumber' cannot be combined with 'PersonName.DateOfBirth' or 'PersonName.Gender'.
     *
     * @var string
     */
    protected $redressNumber;
    /**
     * The airline vendor preferences.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoSecureFlightItemVendorPrefs
     */
    protected $vendorPrefs;
    /**
     * The segment number.
     * Used to specify an itinerary segment to associate the SSR to.
     * 'A' can be specified to associate the SSR to all segments.
     *
     * @var string
     */
    protected $segmentNumber;

    /**
     * Used to pass the country of issue for 'KnownTravelerNumber' or 'RedressNumber'.
     *
     * @return string
     */
    public function getIssueCountry(): string
    {
        return $this->issueCountry;
    }

    /**
     * Used to pass the country of issue for 'KnownTravelerNumber' or 'RedressNumber'.
     *
     * @param string $issueCountry
     *
     * @return self
     */
    public function setIssueCountry(string $issueCountry): self
    {
        $this->issueCountry = $issueCountry;

        return $this;
    }

    /**
     * The known traveler number.
     * 'KnownTravelerNumber' cannot be combined with 'PersonName.DateOfBirth' or  'PersonName.Gender' and 'RedressNumber'.
     *
     * @return string
     */
    public function getKnownTravelerNumber(): string
    {
        return $this->knownTravelerNumber;
    }

    /**
     * The known traveler number.
     * 'KnownTravelerNumber' cannot be combined with 'PersonName.DateOfBirth' or  'PersonName.Gender' and 'RedressNumber'.
     *
     * @param string $knownTravelerNumber
     *
     * @return self
     */
    public function setKnownTravelerNumber(string $knownTravelerNumber): self
    {
        $this->knownTravelerNumber = $knownTravelerNumber;

        return $this;
    }

    /**
     * The personal details.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoSecureFlightItemPersonName
     */
    public function getPersonName(): CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoSecureFlightItemPersonName
    {
        return $this->personName;
    }

    /**
     * The personal details.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoSecureFlightItemPersonName $personName
     *
     * @return self
     */
    public function setPersonName(CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoSecureFlightItemPersonName $personName): self
    {
        $this->personName = $personName;

        return $this;
    }

    /**
     * The redress number.
     * 'RedressNumber' cannot be combined with 'PersonName.DateOfBirth' or 'PersonName.Gender'.
     *
     * @return string
     */
    public function getRedressNumber(): string
    {
        return $this->redressNumber;
    }

    /**
     * The redress number.
     * 'RedressNumber' cannot be combined with 'PersonName.DateOfBirth' or 'PersonName.Gender'.
     *
     * @param string $redressNumber
     *
     * @return self
     */
    public function setRedressNumber(string $redressNumber): self
    {
        $this->redressNumber = $redressNumber;

        return $this;
    }

    /**
     * The airline vendor preferences.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoSecureFlightItemVendorPrefs
     */
    public function getVendorPrefs(): CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoSecureFlightItemVendorPrefs
    {
        return $this->vendorPrefs;
    }

    /**
     * The airline vendor preferences.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoSecureFlightItemVendorPrefs $vendorPrefs
     *
     * @return self
     */
    public function setVendorPrefs(CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoSecureFlightItemVendorPrefs $vendorPrefs): self
    {
        $this->vendorPrefs = $vendorPrefs;

        return $this;
    }

    /**
     * The segment number.
     * Used to specify an itinerary segment to associate the SSR to.
     * 'A' can be specified to associate the SSR to all segments.
     *
     * @return string
     */
    public function getSegmentNumber(): string
    {
        return $this->segmentNumber;
    }

    /**
     * The segment number.
     * Used to specify an itinerary segment to associate the SSR to.
     * 'A' can be specified to associate the SSR to all segments.
     *
     * @param string $segmentNumber
     *
     * @return self
     */
    public function setSegmentNumber(string $segmentNumber): self
    {
        $this->segmentNumber = $segmentNumber;

        return $this;
    }
}
