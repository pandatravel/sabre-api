<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersPassengerTypeItem extends AbstractModel
{
    /**
     * Used to specify a passenger type code.
     *
     * @var string
     */
    protected $code;
    /**
     * Used to force the system to price with the specified passenger type code.
    If the client requests multiple passenger types and also wishes to make use of 'Forc'e they should only pass it on the last 'PassengerType' occurrence.

     *
     * @var bool
     */
    protected $force;
    /**
     * Used to specify the number of passengers.
     *
     * @var string
     */
    protected $quantity;

    /**
     * Used to specify a passenger type code.
     *
     * @return string|null
     */
    public function getCode(): ?string
    {
        return $this->code;
    }

    /**
     * Used to specify a passenger type code.
     *
     * @param string|null $code
     *
     * @return self
     */
    public function setCode(?string $code): self
    {
        $this->code = $code;

        return $this;
    }

    /**
     * Used to force the system to price with the specified passenger type code.
    If the client requests multiple passenger types and also wishes to make use of 'Forc'e they should only pass it on the last 'PassengerType' occurrence.

     *
     * @return bool|null
     */
    public function getForce(): ?bool
    {
        return $this->force;
    }

    /**
     * Used to force the system to price with the specified passenger type code.
    If the client requests multiple passenger types and also wishes to make use of 'Forc'e they should only pass it on the last 'PassengerType' occurrence.

     *
     * @param bool|null $force
     *
     * @return self
     */
    public function setForce(?bool $force): self
    {
        $this->force = $force;

        return $this;
    }

    /**
     * Used to specify the number of passengers.
     *
     * @return string|null
     */
    public function getQuantity(): ?string
    {
        return $this->quantity;
    }

    /**
     * Used to specify the number of passengers.
     *
     * @param string|null $quantity
     *
     * @return self
     */
    public function setQuantity(?string $quantity): self
    {
        $this->quantity = $quantity;

        return $this;
    }
}
