<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQTravelItineraryAddInfoCustomerInfoEmailItem extends AbstractModel
{
    /**
     * Used to add an email address into the record.
     *
     * @var string
     */
    protected $address;
    /**
     * Used to override the language in the agency's Travel Journal Record (TJR).
     *
     * @var string
     */
    protected $languageOverride;
    /**
     * Used to specify a passenger name number.
     *
     * @var string
     */
    protected $nameNumber;
    /**
     * Used to specify the miscellaneous email address-related free text information.
     *
     * @var string
     */
    protected $shortText;
    /**
     * Used to specify the type of email address.
    Acceptable values for 'Type' are: 'BC' for blind copy, 'CC' for carbon copy, 'FR' for from, or 'To' for to.

     *
     * @var string
     */
    protected $type;

    /**
     * Used to add an email address into the record.
     *
     * @return string|null
     */
    public function getAddress(): ?string
    {
        return $this->address;
    }

    /**
     * Used to add an email address into the record.
     *
     * @param string|null $address
     *
     * @return self
     */
    public function setAddress(?string $address): self
    {
        $this->address = $address;

        return $this;
    }

    /**
     * Used to override the language in the agency's Travel Journal Record (TJR).
     *
     * @return string|null
     */
    public function getLanguageOverride(): ?string
    {
        return $this->languageOverride;
    }

    /**
     * Used to override the language in the agency's Travel Journal Record (TJR).
     *
     * @param string|null $languageOverride
     *
     * @return self
     */
    public function setLanguageOverride(?string $languageOverride): self
    {
        $this->languageOverride = $languageOverride;

        return $this;
    }

    /**
     * Used to specify a passenger name number.
     *
     * @return string|null
     */
    public function getNameNumber(): ?string
    {
        return $this->nameNumber;
    }

    /**
     * Used to specify a passenger name number.
     *
     * @param string|null $nameNumber
     *
     * @return self
     */
    public function setNameNumber(?string $nameNumber): self
    {
        $this->nameNumber = $nameNumber;

        return $this;
    }

    /**
     * Used to specify the miscellaneous email address-related free text information.
     *
     * @return string|null
     */
    public function getShortText(): ?string
    {
        return $this->shortText;
    }

    /**
     * Used to specify the miscellaneous email address-related free text information.
     *
     * @param string|null $shortText
     *
     * @return self
     */
    public function setShortText(?string $shortText): self
    {
        $this->shortText = $shortText;

        return $this;
    }

    /**
     * Used to specify the type of email address.
    Acceptable values for 'Type' are: 'BC' for blind copy, 'CC' for carbon copy, 'FR' for from, or 'To' for to.

     *
     * @return string|null
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Used to specify the type of email address.
    Acceptable values for 'Type' are: 'BC' for blind copy, 'CC' for carbon copy, 'FR' for from, or 'To' for to.

     *
     * @param string|null $type
     *
     * @return self
     */
    public function setType(?string $type): self
    {
        $this->type = $type;

        return $this;
    }
}
