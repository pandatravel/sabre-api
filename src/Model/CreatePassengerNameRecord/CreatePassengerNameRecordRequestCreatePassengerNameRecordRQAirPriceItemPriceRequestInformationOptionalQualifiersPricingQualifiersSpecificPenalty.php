<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenalty extends AbstractModel
{
    /**
     * The changeable pricing fare options.
     * Please note that 'Changeable' and 'Refundable' can be combined in a single request to query for both changeable AND refundable pricing options.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyChangeable
     */
    protected $changeable;
    /**
     * The Refundable OR changeable pricing fare options.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyEitherOr
     */
    protected $eitherOr;
    /**
     * The refundable pricing fare options.
     * Please note that 'Changeable' and 'Refundable' can be combined in a single request to query for both changeable AND refundable pricing options.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyRefundable
     */
    protected $refundable;
    /**
     * Used to receive additional tags with information on fare flexibility.
     *
     * @var bool
     */
    protected $additionalInfo;

    /**
     * The changeable pricing fare options.
     * Please note that 'Changeable' and 'Refundable' can be combined in a single request to query for both changeable AND refundable pricing options.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyChangeable
     */
    public function getChangeable(): CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyChangeable
    {
        return $this->changeable;
    }

    /**
     * The changeable pricing fare options.
     * Please note that 'Changeable' and 'Refundable' can be combined in a single request to query for both changeable AND refundable pricing options.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyChangeable $changeable
     *
     * @return self
     */
    public function setChangeable(CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyChangeable $changeable): self
    {
        $this->changeable = $changeable;

        return $this;
    }

    /**
     * The Refundable OR changeable pricing fare options.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyEitherOr
     */
    public function getEitherOr(): CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyEitherOr
    {
        return $this->eitherOr;
    }

    /**
     * The Refundable OR changeable pricing fare options.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyEitherOr $eitherOr
     *
     * @return self
     */
    public function setEitherOr(CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyEitherOr $eitherOr): self
    {
        $this->eitherOr = $eitherOr;

        return $this;
    }

    /**
     * The refundable pricing fare options.
     * Please note that 'Changeable' and 'Refundable' can be combined in a single request to query for both changeable AND refundable pricing options.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyRefundable
     */
    public function getRefundable(): CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyRefundable
    {
        return $this->refundable;
    }

    /**
     * The refundable pricing fare options.
     * Please note that 'Changeable' and 'Refundable' can be combined in a single request to query for both changeable AND refundable pricing options.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyRefundable $refundable
     *
     * @return self
     */
    public function setRefundable(CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyRefundable $refundable): self
    {
        $this->refundable = $refundable;

        return $this;
    }

    /**
     * Used to receive additional tags with information on fare flexibility.
     *
     * @return bool
     */
    public function getAdditionalInfo(): bool
    {
        return $this->additionalInfo;
    }

    /**
     * Used to receive additional tags with information on fare flexibility.
     *
     * @param bool $additionalInfo
     *
     * @return self
     */
    public function setAdditionalInfo(bool $additionalInfo): self
    {
        $this->additionalInfo = $additionalInfo;

        return $this;
    }
}
