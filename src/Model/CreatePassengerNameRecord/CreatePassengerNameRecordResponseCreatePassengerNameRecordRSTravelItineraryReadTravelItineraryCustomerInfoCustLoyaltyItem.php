<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordResponseCreatePassengerNameRecordRSTravelItineraryReadTravelItineraryCustomerInfoCustLoyaltyItem extends AbstractModel
{
    /**
     * The traveling airline code.
     *
     * @var string
     */
    protected $travelingCarrierCode;
    /**
     * The passenger's frequent flyer number.
     *
     * @var string
     */
    protected $membershipID;
    /**
     * "NameNumber" is used to associate the particular frequent flyer number to a particular passenger within the record.
     *
     * @var string
     */
    protected $nameNumber;
    /**
     * The passenger's frequent flyer airline code.
     *
     * @var string
     */
    protected $programID;
    /**
     * The reference placeholder.
     *
     * @var string
     */
    protected $rPH;
    /**
     * 'ShortText' is used to return miscellaneous frequent flyer-related information.
     *
     * @var string
     */
    protected $shortText;
    /**
     * The status code associated with the particular flight segment within the record.
     *
     * @var string
     */
    protected $status;
    /**
     * The reference ID.
     *
     * @var string
     */
    protected $id;

    /**
     * The traveling airline code.
     *
     * @return string|null
     */
    public function getTravelingCarrierCode(): ?string
    {
        return $this->travelingCarrierCode;
    }

    /**
     * The traveling airline code.
     *
     * @param string|null $travelingCarrierCode
     *
     * @return self
     */
    public function setTravelingCarrierCode(?string $travelingCarrierCode): self
    {
        $this->travelingCarrierCode = $travelingCarrierCode;

        return $this;
    }

    /**
     * The passenger's frequent flyer number.
     *
     * @return string|null
     */
    public function getMembershipID(): ?string
    {
        return $this->membershipID;
    }

    /**
     * The passenger's frequent flyer number.
     *
     * @param string|null $membershipID
     *
     * @return self
     */
    public function setMembershipID(?string $membershipID): self
    {
        $this->membershipID = $membershipID;

        return $this;
    }

    /**
     * "NameNumber" is used to associate the particular frequent flyer number to a particular passenger within the record.
     *
     * @return string|null
     */
    public function getNameNumber(): ?string
    {
        return $this->nameNumber;
    }

    /**
     * "NameNumber" is used to associate the particular frequent flyer number to a particular passenger within the record.
     *
     * @param string|null $nameNumber
     *
     * @return self
     */
    public function setNameNumber(?string $nameNumber): self
    {
        $this->nameNumber = $nameNumber;

        return $this;
    }

    /**
     * The passenger's frequent flyer airline code.
     *
     * @return string|null
     */
    public function getProgramID(): ?string
    {
        return $this->programID;
    }

    /**
     * The passenger's frequent flyer airline code.
     *
     * @param string|null $programID
     *
     * @return self
     */
    public function setProgramID(?string $programID): self
    {
        $this->programID = $programID;

        return $this;
    }

    /**
     * The reference placeholder.
     *
     * @return string|null
     */
    public function getRPH(): ?string
    {
        return $this->rPH;
    }

    /**
     * The reference placeholder.
     *
     * @param string|null $rPH
     *
     * @return self
     */
    public function setRPH(?string $rPH): self
    {
        $this->rPH = $rPH;

        return $this;
    }

    /**
     * 'ShortText' is used to return miscellaneous frequent flyer-related information.
     *
     * @return string|null
     */
    public function getShortText(): ?string
    {
        return $this->shortText;
    }

    /**
     * 'ShortText' is used to return miscellaneous frequent flyer-related information.
     *
     * @param string|null $shortText
     *
     * @return self
     */
    public function setShortText(?string $shortText): self
    {
        $this->shortText = $shortText;

        return $this;
    }

    /**
     * The status code associated with the particular flight segment within the record.
     *
     * @return string|null
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * The status code associated with the particular flight segment within the record.
     *
     * @param string|null $status
     *
     * @return self
     */
    public function setStatus(?string $status): self
    {
        $this->status = $status;

        return $this;
    }

    /**
     * The reference ID.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * The reference ID.
     *
     * @param string|null $id
     *
     * @return self
     */
    public function setId(?string $id): self
    {
        $this->id = $id;

        return $this;
    }
}
