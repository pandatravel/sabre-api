<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemSpecificPenaltyItemPenaltyInformation extends AbstractModel
{
    /**
     * The fare basis code information.
     *
     * @var string[]
     */
    protected $fareBasisCode;
    /**
     * The fare component information.
     *
     * @var string[]
     */
    protected $fareComponent;
    /**
     * The penalty amount.
     *
     * @var string
     */
    protected $amount;
    /**
     * Indicates whether the penalty is sourced from fare rule Category16.
     *
     * @var bool
     */
    protected $cat16;
    /**
     * The currency code.
     *
     * @var string
     */
    protected $currency;
    /**
     * Indicates whether the penalty is applicable or not.
     *
     * @var bool
     */
    protected $notApplicable;
    /**
     * 'Type' returns four penalty types:.
    'CPBD' - change penalty before departure,
    'CPAD' - change penalty after departure,
    'RPBD' - refund penalty before departure,
    'RPAD' - refund penalty after departure.

     *
     * @var string
     */
    protected $type;

    /**
     * The fare basis code information.
     *
     * @return string[]|null
     */
    public function getFareBasisCode(): ?array
    {
        return $this->fareBasisCode;
    }

    /**
     * The fare basis code information.
     *
     * @param string[]|null $fareBasisCode
     *
     * @return self
     */
    public function setFareBasisCode(?array $fareBasisCode): self
    {
        $this->fareBasisCode = $fareBasisCode;

        return $this;
    }

    /**
     * The fare component information.
     *
     * @return string[]|null
     */
    public function getFareComponent(): ?array
    {
        return $this->fareComponent;
    }

    /**
     * The fare component information.
     *
     * @param string[]|null $fareComponent
     *
     * @return self
     */
    public function setFareComponent(?array $fareComponent): self
    {
        $this->fareComponent = $fareComponent;

        return $this;
    }

    /**
     * The penalty amount.
     *
     * @return string|null
     */
    public function getAmount(): ?string
    {
        return $this->amount;
    }

    /**
     * The penalty amount.
     *
     * @param string|null $amount
     *
     * @return self
     */
    public function setAmount(?string $amount): self
    {
        $this->amount = $amount;

        return $this;
    }

    /**
     * Indicates whether the penalty is sourced from fare rule Category16.
     *
     * @return bool|null
     */
    public function getCat16(): ?bool
    {
        return $this->cat16;
    }

    /**
     * Indicates whether the penalty is sourced from fare rule Category16.
     *
     * @param bool|null $cat16
     *
     * @return self
     */
    public function setCat16(?bool $cat16): self
    {
        $this->cat16 = $cat16;

        return $this;
    }

    /**
     * The currency code.
     *
     * @return string|null
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * The currency code.
     *
     * @param string|null $currency
     *
     * @return self
     */
    public function setCurrency(?string $currency): self
    {
        $this->currency = $currency;

        return $this;
    }

    /**
     * Indicates whether the penalty is applicable or not.
     *
     * @return bool|null
     */
    public function getNotApplicable(): ?bool
    {
        return $this->notApplicable;
    }

    /**
     * Indicates whether the penalty is applicable or not.
     *
     * @param bool|null $notApplicable
     *
     * @return self
     */
    public function setNotApplicable(?bool $notApplicable): self
    {
        $this->notApplicable = $notApplicable;

        return $this;
    }

    /**
     * 'Type' returns four penalty types:.
    'CPBD' - change penalty before departure,
    'CPAD' - change penalty after departure,
    'RPBD' - refund penalty before departure,
    'RPAD' - refund penalty after departure.

     *
     * @return string|null
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * 'Type' returns four penalty types:.
    'CPBD' - change penalty before departure,
    'CPAD' - change penalty after departure,
    'RPBD' - refund penalty before departure,
    'RPAD' - refund penalty after departure.

     *
     * @param string|null $type
     *
     * @return self
     */
    public function setType(?string $type): self
    {
        $this->type = $type;

        return $this;
    }
}
