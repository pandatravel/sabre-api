<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiers';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiers';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Ammonkc\SabreApi\Model\CreatePassengerNameRecord\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiers();
        if (property_exists($data, 'AirExtras') && $data->{'AirExtras'} !== null) {
            $object->setAirExtras($this->denormalizer->denormalize($data->{'AirExtras'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersAirExtras', 'json', $context));
        }
        if (property_exists($data, 'BaggageAllowance') && $data->{'BaggageAllowance'} !== null) {
            $values = [];
            foreach ($data->{'BaggageAllowance'} as $value) {
                $values[] = $this->denormalizer->denormalize($value, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersBaggageAllowanceItem', 'json', $context);
            }
            $object->setBaggageAllowance($values);
        }
        if (property_exists($data, 'Commission') && $data->{'Commission'} !== null) {
            $object->setCommission($this->denormalizer->denormalize($data->{'Commission'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersCommission', 'json', $context));
        }
        if (property_exists($data, 'Customer') && $data->{'Customer'} !== null) {
            $object->setCustomer($this->denormalizer->denormalize($data->{'Customer'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersCustomer', 'json', $context));
        }
        if (property_exists($data, 'Endorsements') && $data->{'Endorsements'} !== null) {
            $object->setEndorsements($this->denormalizer->denormalize($data->{'Endorsements'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersEndorsements', 'json', $context));
        }
        if (property_exists($data, 'HemisphereCode') && $data->{'HemisphereCode'} !== null) {
            $object->setHemisphereCode($data->{'HemisphereCode'});
        }
        if (property_exists($data, 'JourneyCode') && $data->{'JourneyCode'} !== null) {
            $object->setJourneyCode($data->{'JourneyCode'});
        }
        if (property_exists($data, 'MultiTicket') && $data->{'MultiTicket'} !== null) {
            $object->setMultiTicket($this->denormalizer->denormalize($data->{'MultiTicket'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersMultiTicket', 'json', $context));
        }
        if (property_exists($data, 'TourCode') && $data->{'TourCode'} !== null) {
            $object->setTourCode($this->denormalizer->denormalize($data->{'TourCode'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersTourCode', 'json', $context));
        }
        if (property_exists($data, 'ValidationMethod') && $data->{'ValidationMethod'} !== null) {
            $object->setValidationMethod($data->{'ValidationMethod'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAirExtras()) {
            $data->{'AirExtras'} = $this->normalizer->normalize($object->getAirExtras(), 'json', $context);
        }
        if (null !== $object->getBaggageAllowance()) {
            $values = [];
            foreach ($object->getBaggageAllowance() as $value) {
                $values[] = $this->normalizer->normalize($value, 'json', $context);
            }
            $data->{'BaggageAllowance'} = $values;
        }
        if (null !== $object->getCommission()) {
            $data->{'Commission'} = $this->normalizer->normalize($object->getCommission(), 'json', $context);
        }
        if (null !== $object->getCustomer()) {
            $data->{'Customer'} = $this->normalizer->normalize($object->getCustomer(), 'json', $context);
        }
        if (null !== $object->getEndorsements()) {
            $data->{'Endorsements'} = $this->normalizer->normalize($object->getEndorsements(), 'json', $context);
        }
        if (null !== $object->getHemisphereCode()) {
            $data->{'HemisphereCode'} = $object->getHemisphereCode();
        }
        if (null !== $object->getJourneyCode()) {
            $data->{'JourneyCode'} = $object->getJourneyCode();
        }
        if (null !== $object->getMultiTicket()) {
            $data->{'MultiTicket'} = $this->normalizer->normalize($object->getMultiTicket(), 'json', $context);
        }
        if (null !== $object->getTourCode()) {
            $data->{'TourCode'} = $this->normalizer->normalize($object->getTourCode(), 'json', $context);
        }
        if (null !== $object->getValidationMethod()) {
            $data->{'ValidationMethod'} = $object->getValidationMethod();
        }

        return $data;
    }
}
