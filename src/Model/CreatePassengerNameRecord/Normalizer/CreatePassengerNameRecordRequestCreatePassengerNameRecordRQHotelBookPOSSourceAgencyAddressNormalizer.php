<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQHotelBookPOSSourceAgencyAddressNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQHotelBookPOSSourceAgencyAddress';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQHotelBookPOSSourceAgencyAddress';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Ammonkc\SabreApi\Model\CreatePassengerNameRecord\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQHotelBookPOSSourceAgencyAddress();
        if (property_exists($data, 'AddressLine1') && $data->{'AddressLine1'} !== null) {
            $object->setAddressLine1($data->{'AddressLine1'});
        }
        if (property_exists($data, 'AddressLine2') && $data->{'AddressLine2'} !== null) {
            $object->setAddressLine2($data->{'AddressLine2'});
        }
        if (property_exists($data, 'AddressLine3') && $data->{'AddressLine3'} !== null) {
            $object->setAddressLine3($data->{'AddressLine3'});
        }
        if (property_exists($data, 'CityName') && $data->{'CityName'} !== null) {
            $object->setCityName($this->denormalizer->denormalize($data->{'CityName'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQHotelBookPOSSourceAgencyAddressCityName', 'json', $context));
        }
        if (property_exists($data, 'StateProv') && $data->{'StateProv'} !== null) {
            $object->setStateProv($this->denormalizer->denormalize($data->{'StateProv'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQHotelBookPOSSourceAgencyAddressStateProv', 'json', $context));
        }
        if (property_exists($data, 'PostalCode') && $data->{'PostalCode'} !== null) {
            $object->setPostalCode($data->{'PostalCode'});
        }
        if (property_exists($data, 'CountryName') && $data->{'CountryName'} !== null) {
            $object->setCountryName($this->denormalizer->denormalize($data->{'CountryName'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQHotelBookPOSSourceAgencyAddressCountryName', 'json', $context));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAddressLine1()) {
            $data->{'AddressLine1'} = $object->getAddressLine1();
        }
        if (null !== $object->getAddressLine2()) {
            $data->{'AddressLine2'} = $object->getAddressLine2();
        }
        if (null !== $object->getAddressLine3()) {
            $data->{'AddressLine3'} = $object->getAddressLine3();
        }
        if (null !== $object->getCityName()) {
            $data->{'CityName'} = $this->normalizer->normalize($object->getCityName(), 'json', $context);
        }
        if (null !== $object->getStateProv()) {
            $data->{'StateProv'} = $this->normalizer->normalize($object->getStateProv(), 'json', $context);
        }
        if (null !== $object->getPostalCode()) {
            $data->{'PostalCode'} = $object->getPostalCode();
        }
        if (null !== $object->getCountryName()) {
            $data->{'CountryName'} = $this->normalizer->normalize($object->getCountryName(), 'json', $context);
        }

        return $data;
    }
}
