<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQPostProcessingEndTransactionEmailNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQPostProcessingEndTransactionEmail';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQPostProcessingEndTransactionEmail';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Ammonkc\SabreApi\Model\CreatePassengerNameRecord\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQPostProcessingEndTransactionEmail();
        if (property_exists($data, 'eTicket') && $data->{'eTicket'} !== null) {
            $object->setETicket($this->denormalizer->denormalize($data->{'eTicket'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQPostProcessingEndTransactionEmailETicket', 'json', $context));
        }
        if (property_exists($data, 'Invoice') && $data->{'Invoice'} !== null) {
            $object->setInvoice($this->denormalizer->denormalize($data->{'Invoice'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQPostProcessingEndTransactionEmailInvoice', 'json', $context));
        }
        if (property_exists($data, 'Itinerary') && $data->{'Itinerary'} !== null) {
            $object->setItinerary($this->denormalizer->denormalize($data->{'Itinerary'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQPostProcessingEndTransactionEmailItinerary', 'json', $context));
        }
        if (property_exists($data, 'PersonName') && $data->{'PersonName'} !== null) {
            $object->setPersonName($this->denormalizer->denormalize($data->{'PersonName'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQPostProcessingEndTransactionEmailPersonName', 'json', $context));
        }
        if (property_exists($data, 'Ind') && $data->{'Ind'} !== null) {
            $object->setInd($data->{'Ind'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getETicket()) {
            $data->{'eTicket'} = $this->normalizer->normalize($object->getETicket(), 'json', $context);
        }
        if (null !== $object->getInvoice()) {
            $data->{'Invoice'} = $this->normalizer->normalize($object->getInvoice(), 'json', $context);
        }
        if (null !== $object->getItinerary()) {
            $data->{'Itinerary'} = $this->normalizer->normalize($object->getItinerary(), 'json', $context);
        }
        if (null !== $object->getPersonName()) {
            $data->{'PersonName'} = $this->normalizer->normalize($object->getPersonName(), 'json', $context);
        }
        if (null !== $object->getInd()) {
            $data->{'Ind'} = $object->getInd();
        }

        return $data;
    }
}
