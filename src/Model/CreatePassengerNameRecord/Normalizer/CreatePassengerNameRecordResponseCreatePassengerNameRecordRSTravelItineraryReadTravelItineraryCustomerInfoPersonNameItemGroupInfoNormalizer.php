<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CreatePassengerNameRecordResponseCreatePassengerNameRecordRSTravelItineraryReadTravelItineraryCustomerInfoPersonNameItemGroupInfoNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSTravelItineraryReadTravelItineraryCustomerInfoPersonNameItemGroupInfo';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Ammonkc\SabreApi\Model\CreatePassengerNameRecord\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSTravelItineraryReadTravelItineraryCustomerInfoPersonNameItemGroupInfo;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\CreatePassengerNameRecord\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSTravelItineraryReadTravelItineraryCustomerInfoPersonNameItemGroupInfo();
        if (property_exists($data, 'AssociatedReferenceInformation')) {
            $object->setAssociatedReferenceInformation($this->denormalizer->denormalize($data->{'AssociatedReferenceInformation'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSTravelItineraryReadTravelItineraryCustomerInfoPersonNameItemGroupInfoAssociatedReferenceInformation', 'json', $context));
        }
        if (property_exists($data, 'Name')) {
            $object->setName($data->{'Name'});
        }
        if (property_exists($data, 'OriginalNumberOfSeats')) {
            $object->setOriginalNumberOfSeats($data->{'OriginalNumberOfSeats'});
        }
        if (property_exists($data, 'GroupNameNumber')) {
            $object->setGroupNameNumber($data->{'GroupNameNumber'});
        }
        if (property_exists($data, 'NumSeatsRemaining')) {
            $object->setNumSeatsRemaining($data->{'NumSeatsRemaining'});
        }
        if (property_exists($data, 'SoldNumberOfSeats')) {
            $object->setSoldNumberOfSeats($data->{'SoldNumberOfSeats'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAssociatedReferenceInformation()) {
            $data->{'AssociatedReferenceInformation'} = $this->normalizer->normalize($object->getAssociatedReferenceInformation(), 'json', $context);
        }
        if (null !== $object->getName()) {
            $data->{'Name'} = $object->getName();
        }
        if (null !== $object->getOriginalNumberOfSeats()) {
            $data->{'OriginalNumberOfSeats'} = $object->getOriginalNumberOfSeats();
        }
        if (null !== $object->getGroupNameNumber()) {
            $data->{'GroupNameNumber'} = $object->getGroupNameNumber();
        }
        if (null !== $object->getNumSeatsRemaining()) {
            $data->{'NumSeatsRemaining'} = $object->getNumSeatsRemaining();
        }
        if (null !== $object->getSoldNumberOfSeats()) {
            $data->{'SoldNumberOfSeats'} = $object->getSoldNumberOfSeats();
        }

        return $data;
    }
}
