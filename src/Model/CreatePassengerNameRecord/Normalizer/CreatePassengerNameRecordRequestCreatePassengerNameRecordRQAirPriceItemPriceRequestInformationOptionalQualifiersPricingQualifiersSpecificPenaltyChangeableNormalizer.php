<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyChangeableNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyChangeable';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyChangeable';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Ammonkc\SabreApi\Model\CreatePassengerNameRecord\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersPricingQualifiersSpecificPenaltyChangeable();
        if (property_exists($data, 'Any') && $data->{'Any'} !== null) {
            $object->setAny($data->{'Any'});
        }
        if (property_exists($data, 'CurrencyCode') && $data->{'CurrencyCode'} !== null) {
            $object->setCurrencyCode($data->{'CurrencyCode'});
        }
        if (property_exists($data, 'MaxPenalty') && $data->{'MaxPenalty'} !== null) {
            $object->setMaxPenalty($data->{'MaxPenalty'});
        }
        if (property_exists($data, 'BeforeDeparture') && $data->{'BeforeDeparture'} !== null) {
            $object->setBeforeDeparture($data->{'BeforeDeparture'});
        }
        if (property_exists($data, 'AfterDeparture') && $data->{'AfterDeparture'} !== null) {
            $object->setAfterDeparture($data->{'AfterDeparture'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAny()) {
            $data->{'Any'} = $object->getAny();
        }
        if (null !== $object->getCurrencyCode()) {
            $data->{'CurrencyCode'} = $object->getCurrencyCode();
        }
        if (null !== $object->getMaxPenalty()) {
            $data->{'MaxPenalty'} = $object->getMaxPenalty();
        }
        if (null !== $object->getBeforeDeparture()) {
            $data->{'BeforeDeparture'} = $object->getBeforeDeparture();
        }
        if (null !== $object->getAfterDeparture()) {
            $data->{'AfterDeparture'} = $object->getAfterDeparture();
        }

        return $data;
    }
}
