<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociationsNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociations';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociations';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\CreatePassengerNameRecord\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociations();
        if (property_exists($data, 'CarrierCode')) {
            $values = [];
            foreach ($data->{'CarrierCode'} as $value) {
                $values[] = $this->denormalizer->denormalize($value, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociationsCarrierCodeItem', 'json', $context);
            }
            $object->setCarrierCode($values);
        }
        if (property_exists($data, 'CountForSegmentAssociatedID')) {
            $object->setCountForSegmentAssociatedID($data->{'CountForSegmentAssociatedID'});
        }
        if (property_exists($data, 'DepartureDate')) {
            $values_1 = [];
            foreach ($data->{'DepartureDate'} as $value_1) {
                $values_1[] = $this->denormalizer->denormalize($value_1, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociationsDepartureDateItem', 'json', $context);
            }
            $object->setDepartureDate($values_1);
        }
        if (property_exists($data, 'DestinationLocation')) {
            $values_2 = [];
            foreach ($data->{'DestinationLocation'} as $value_2) {
                $values_2[] = $this->denormalizer->denormalize($value_2, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociationsDestinationLocationItem', 'json', $context);
            }
            $object->setDestinationLocation($values_2);
        }
        if (property_exists($data, 'FlightNumber')) {
            $values_3 = [];
            foreach ($data->{'FlightNumber'} as $value_3) {
                $values_3[] = $this->denormalizer->denormalize($value_3, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociationsFlightNumberItem', 'json', $context);
            }
            $object->setFlightNumber($values_3);
        }
        if (property_exists($data, 'OriginLocation')) {
            $values_4 = [];
            foreach ($data->{'OriginLocation'} as $value_4) {
                $values_4[] = $this->denormalizer->denormalize($value_4, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociationsOriginLocationItem', 'json', $context);
            }
            $object->setOriginLocation($values_4);
        }
        if (property_exists($data, 'PNR_Segment')) {
            $values_5 = [];
            foreach ($data->{'PNR_Segment'} as $value_5) {
                $values_5[] = $this->denormalizer->denormalize($value_5, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociationsPNRSegmentItem', 'json', $context);
            }
            $object->setPNRSegment($values_5);
        }
        if (property_exists($data, 'ResBookDesigCode')) {
            $values_6 = [];
            foreach ($data->{'ResBookDesigCode'} as $value_6) {
                $values_6[] = $this->denormalizer->denormalize($value_6, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociationsResBookDesigCodeItem', 'json', $context);
            }
            $object->setResBookDesigCode($values_6);
        }
        if (property_exists($data, 'StatusCode')) {
            $values_7 = [];
            foreach ($data->{'StatusCode'} as $value_7) {
                $values_7[] = $this->denormalizer->denormalize($value_7, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociationsStatusCodeItem', 'json', $context);
            }
            $object->setStatusCode($values_7);
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getCarrierCode()) {
            $values = [];
            foreach ($object->getCarrierCode() as $value) {
                $values[] = $this->normalizer->normalize($value, 'json', $context);
            }
            $data->{'CarrierCode'} = $values;
        }
        if (null !== $object->getCountForSegmentAssociatedID()) {
            $data->{'CountForSegmentAssociatedID'} = $object->getCountForSegmentAssociatedID();
        }
        if (null !== $object->getDepartureDate()) {
            $values_1 = [];
            foreach ($object->getDepartureDate() as $value_1) {
                $values_1[] = $this->normalizer->normalize($value_1, 'json', $context);
            }
            $data->{'DepartureDate'} = $values_1;
        }
        if (null !== $object->getDestinationLocation()) {
            $values_2 = [];
            foreach ($object->getDestinationLocation() as $value_2) {
                $values_2[] = $this->normalizer->normalize($value_2, 'json', $context);
            }
            $data->{'DestinationLocation'} = $values_2;
        }
        if (null !== $object->getFlightNumber()) {
            $values_3 = [];
            foreach ($object->getFlightNumber() as $value_3) {
                $values_3[] = $this->normalizer->normalize($value_3, 'json', $context);
            }
            $data->{'FlightNumber'} = $values_3;
        }
        if (null !== $object->getOriginLocation()) {
            $values_4 = [];
            foreach ($object->getOriginLocation() as $value_4) {
                $values_4[] = $this->normalizer->normalize($value_4, 'json', $context);
            }
            $data->{'OriginLocation'} = $values_4;
        }
        if (null !== $object->getPNRSegment()) {
            $values_5 = [];
            foreach ($object->getPNRSegment() as $value_5) {
                $values_5[] = $this->normalizer->normalize($value_5, 'json', $context);
            }
            $data->{'PNR_Segment'} = $values_5;
        }
        if (null !== $object->getResBookDesigCode()) {
            $values_6 = [];
            foreach ($object->getResBookDesigCode() as $value_6) {
                $values_6[] = $this->normalizer->normalize($value_6, 'json', $context);
            }
            $data->{'ResBookDesigCode'} = $values_6;
        }
        if (null !== $object->getStatusCode()) {
            $values_7 = [];
            foreach ($object->getStatusCode() as $value_7) {
                $values_7[] = $this->normalizer->normalize($value_7, 'json', $context);
            }
            $data->{'StatusCode'} = $values_7;
        }

        return $data;
    }
}
