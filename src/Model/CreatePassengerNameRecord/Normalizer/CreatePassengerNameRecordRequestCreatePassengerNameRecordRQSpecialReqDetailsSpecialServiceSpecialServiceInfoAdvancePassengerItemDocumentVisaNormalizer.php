<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoAdvancePassengerItemDocumentVisaNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoAdvancePassengerItemDocumentVisa';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoAdvancePassengerItemDocumentVisa';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\CreatePassengerNameRecord\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQSpecialReqDetailsSpecialServiceSpecialServiceInfoAdvancePassengerItemDocumentVisa();
        if (property_exists($data, 'ApplicableCountry')) {
            $object->setApplicableCountry($data->{'ApplicableCountry'});
        }
        if (property_exists($data, 'PlaceOfBirth')) {
            $object->setPlaceOfBirth($data->{'PlaceOfBirth'});
        }
        if (property_exists($data, 'PlaceOfIssue')) {
            $object->setPlaceOfIssue($data->{'PlaceOfIssue'});
        }
        if (property_exists($data, 'IssueDate')) {
            $object->setIssueDate($data->{'IssueDate'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getApplicableCountry()) {
            $data->{'ApplicableCountry'} = $object->getApplicableCountry();
        }
        if (null !== $object->getPlaceOfBirth()) {
            $data->{'PlaceOfBirth'} = $object->getPlaceOfBirth();
        }
        if (null !== $object->getPlaceOfIssue()) {
            $data->{'PlaceOfIssue'} = $object->getPlaceOfIssue();
        }
        if (null !== $object->getIssueDate()) {
            $data->{'IssueDate'} = $object->getIssueDate();
        }

        return $data;
    }
}
