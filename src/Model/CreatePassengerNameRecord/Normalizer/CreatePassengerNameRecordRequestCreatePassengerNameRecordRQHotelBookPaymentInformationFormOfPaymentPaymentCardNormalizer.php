<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQHotelBookPaymentInformationFormOfPaymentPaymentCardNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQHotelBookPaymentInformationFormOfPaymentPaymentCard';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQHotelBookPaymentInformationFormOfPaymentPaymentCard';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Ammonkc\SabreApi\Model\CreatePassengerNameRecord\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQHotelBookPaymentInformationFormOfPaymentPaymentCard();
        if (property_exists($data, 'PaymentType') && $data->{'PaymentType'} !== null) {
            $object->setPaymentType($data->{'PaymentType'});
        }
        if (property_exists($data, 'CardCode') && $data->{'CardCode'} !== null) {
            $object->setCardCode($data->{'CardCode'});
        }
        if (property_exists($data, 'CardNumber') && $data->{'CardNumber'} !== null) {
            $object->setCardNumber($data->{'CardNumber'});
        }
        if (property_exists($data, 'ExpiryMonth') && $data->{'ExpiryMonth'} !== null) {
            $object->setExpiryMonth($data->{'ExpiryMonth'});
        }
        if (property_exists($data, 'ExpiryYear') && $data->{'ExpiryYear'} !== null) {
            $object->setExpiryYear($data->{'ExpiryYear'});
        }
        if (property_exists($data, 'FullCardHolderName') && $data->{'FullCardHolderName'} !== null) {
            $object->setFullCardHolderName($this->denormalizer->denormalize($data->{'FullCardHolderName'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQHotelBookPaymentInformationFormOfPaymentPaymentCardFullCardHolderName', 'json', $context));
        }
        if (property_exists($data, 'CSC') && $data->{'CSC'} !== null) {
            $object->setCSC($data->{'CSC'});
        }
        if (property_exists($data, 'Address') && $data->{'Address'} !== null) {
            $object->setAddress($this->denormalizer->denormalize($data->{'Address'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQHotelBookPaymentInformationFormOfPaymentPaymentCardAddress', 'json', $context));
        }
        if (property_exists($data, 'Phone') && $data->{'Phone'} !== null) {
            $object->setPhone($this->denormalizer->denormalize($data->{'Phone'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQHotelBookPaymentInformationFormOfPaymentPaymentCardPhone', 'json', $context));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getPaymentType()) {
            $data->{'PaymentType'} = $object->getPaymentType();
        }
        if (null !== $object->getCardCode()) {
            $data->{'CardCode'} = $object->getCardCode();
        }
        if (null !== $object->getCardNumber()) {
            $data->{'CardNumber'} = $object->getCardNumber();
        }
        if (null !== $object->getExpiryMonth()) {
            $data->{'ExpiryMonth'} = $object->getExpiryMonth();
        }
        if (null !== $object->getExpiryYear()) {
            $data->{'ExpiryYear'} = $object->getExpiryYear();
        }
        if (null !== $object->getFullCardHolderName()) {
            $data->{'FullCardHolderName'} = $this->normalizer->normalize($object->getFullCardHolderName(), 'json', $context);
        }
        if (null !== $object->getCSC()) {
            $data->{'CSC'} = $object->getCSC();
        }
        if (null !== $object->getAddress()) {
            $data->{'Address'} = $this->normalizer->normalize($object->getAddress(), 'json', $context);
        }
        if (null !== $object->getPhone()) {
            $data->{'Phone'} = $this->normalizer->normalize($object->getPhone(), 'json', $context);
        }

        return $data;
    }
}
