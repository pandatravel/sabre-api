<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemFareCalculationBreakdownItemFareBasisNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemFareCalculationBreakdownItemFareBasis';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemFareCalculationBreakdownItemFareBasis';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\CreatePassengerNameRecord\CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemFareCalculationBreakdownItemFareBasis();
        if (property_exists($data, 'Code')) {
            $object->setCode($data->{'Code'});
        }
        if (property_exists($data, 'ContractNumber')) {
            $object->setContractNumber($data->{'ContractNumber'});
        }
        if (property_exists($data, 'CorporateID')) {
            $object->setCorporateID($data->{'CorporateID'});
        }
        if (property_exists($data, 'InclusiveTour')) {
            $object->setInclusiveTour($data->{'InclusiveTour'});
        }
        if (property_exists($data, 'FareAmount')) {
            $object->setFareAmount($data->{'FareAmount'});
        }
        if (property_exists($data, 'FarePassengerType')) {
            $object->setFarePassengerType($data->{'FarePassengerType'});
        }
        if (property_exists($data, 'FareType')) {
            $object->setFareType($data->{'FareType'});
        }
        if (property_exists($data, 'FilingCarrier')) {
            $object->setFilingCarrier($data->{'FilingCarrier'});
        }
        if (property_exists($data, 'GlobalInd')) {
            $object->setGlobalInd($data->{'GlobalInd'});
        }
        if (property_exists($data, 'TripTypeInd')) {
            $object->setTripTypeInd($data->{'TripTypeInd'});
        }
        if (property_exists($data, 'Market')) {
            $object->setMarket($data->{'Market'});
        }
        if (property_exists($data, 'SurfaceSegment')) {
            $object->setSurfaceSegment($data->{'SurfaceSegment'});
        }
        if (property_exists($data, 'TicketDesignator')) {
            $object->setTicketDesignator($data->{'TicketDesignator'});
        }
        if (property_exists($data, 'Cabin')) {
            $object->setCabin($data->{'Cabin'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getCode()) {
            $data->{'Code'} = $object->getCode();
        }
        if (null !== $object->getContractNumber()) {
            $data->{'ContractNumber'} = $object->getContractNumber();
        }
        if (null !== $object->getCorporateID()) {
            $data->{'CorporateID'} = $object->getCorporateID();
        }
        if (null !== $object->getInclusiveTour()) {
            $data->{'InclusiveTour'} = $object->getInclusiveTour();
        }
        if (null !== $object->getFareAmount()) {
            $data->{'FareAmount'} = $object->getFareAmount();
        }
        if (null !== $object->getFarePassengerType()) {
            $data->{'FarePassengerType'} = $object->getFarePassengerType();
        }
        if (null !== $object->getFareType()) {
            $data->{'FareType'} = $object->getFareType();
        }
        if (null !== $object->getFilingCarrier()) {
            $data->{'FilingCarrier'} = $object->getFilingCarrier();
        }
        if (null !== $object->getGlobalInd()) {
            $data->{'GlobalInd'} = $object->getGlobalInd();
        }
        if (null !== $object->getTripTypeInd()) {
            $data->{'TripTypeInd'} = $object->getTripTypeInd();
        }
        if (null !== $object->getMarket()) {
            $data->{'Market'} = $object->getMarket();
        }
        if (null !== $object->getSurfaceSegment()) {
            $data->{'SurfaceSegment'} = $object->getSurfaceSegment();
        }
        if (null !== $object->getTicketDesignator()) {
            $data->{'TicketDesignator'} = $object->getTicketDesignator();
        }
        if (null !== $object->getCabin()) {
            $data->{'Cabin'} = $object->getCabin();
        }

        return $data;
    }
}
