<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQTravelItineraryAddInfoAgencyInfoAddressNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQTravelItineraryAddInfoAgencyInfoAddress';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQTravelItineraryAddInfoAgencyInfoAddress';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Ammonkc\SabreApi\Model\CreatePassengerNameRecord\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQTravelItineraryAddInfoAgencyInfoAddress();
        if (property_exists($data, 'AddressLine') && $data->{'AddressLine'} !== null) {
            $object->setAddressLine($data->{'AddressLine'});
        }
        if (property_exists($data, 'CityName') && $data->{'CityName'} !== null) {
            $object->setCityName($data->{'CityName'});
        }
        if (property_exists($data, 'CountryCode') && $data->{'CountryCode'} !== null) {
            $object->setCountryCode($data->{'CountryCode'});
        }
        if (property_exists($data, 'PostalCode') && $data->{'PostalCode'} !== null) {
            $object->setPostalCode($data->{'PostalCode'});
        }
        if (property_exists($data, 'StateCountyProv') && $data->{'StateCountyProv'} !== null) {
            $object->setStateCountyProv($this->denormalizer->denormalize($data->{'StateCountyProv'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQTravelItineraryAddInfoAgencyInfoAddressStateCountyProv', 'json', $context));
        }
        if (property_exists($data, 'StreetNmbr') && $data->{'StreetNmbr'} !== null) {
            $object->setStreetNmbr($data->{'StreetNmbr'});
        }
        if (property_exists($data, 'VendorPrefs') && $data->{'VendorPrefs'} !== null) {
            $object->setVendorPrefs($this->denormalizer->denormalize($data->{'VendorPrefs'}, 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQTravelItineraryAddInfoAgencyInfoAddressVendorPrefs', 'json', $context));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAddressLine()) {
            $data->{'AddressLine'} = $object->getAddressLine();
        }
        if (null !== $object->getCityName()) {
            $data->{'CityName'} = $object->getCityName();
        }
        if (null !== $object->getCountryCode()) {
            $data->{'CountryCode'} = $object->getCountryCode();
        }
        if (null !== $object->getPostalCode()) {
            $data->{'PostalCode'} = $object->getPostalCode();
        }
        if (null !== $object->getStateCountyProv()) {
            $data->{'StateCountyProv'} = $this->normalizer->normalize($object->getStateCountyProv(), 'json', $context);
        }
        if (null !== $object->getStreetNmbr()) {
            $data->{'StreetNmbr'} = $object->getStreetNmbr();
        }
        if (null !== $object->getVendorPrefs()) {
            $data->{'VendorPrefs'} = $this->normalizer->normalize($object->getVendorPrefs(), 'json', $context);
        }

        return $data;
    }
}
