<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersFOPQualifiersBSPTicketingMultipleFOPFOPTwoCCInfoPaymentCardNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersFOPQualifiersBSPTicketingMultipleFOPFOPTwoCCInfoPaymentCard';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\CreatePassengerNameRecord\\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersFOPQualifiersBSPTicketingMultipleFOPFOPTwoCCInfoPaymentCard';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Ammonkc\SabreApi\Model\CreatePassengerNameRecord\CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersFOPQualifiersBSPTicketingMultipleFOPFOPTwoCCInfoPaymentCard();
        if (property_exists($data, 'Code') && $data->{'Code'} !== null) {
            $object->setCode($data->{'Code'});
        }
        if (property_exists($data, 'ExpireDate') && $data->{'ExpireDate'} !== null) {
            $object->setExpireDate($data->{'ExpireDate'});
        }
        if (property_exists($data, 'ExtendedPayment') && $data->{'ExtendedPayment'} !== null) {
            $object->setExtendedPayment($data->{'ExtendedPayment'});
        }
        if (property_exists($data, 'ManualApprovalCode') && $data->{'ManualApprovalCode'} !== null) {
            $object->setManualApprovalCode($data->{'ManualApprovalCode'});
        }
        if (property_exists($data, 'Number') && $data->{'Number'} !== null) {
            $object->setNumber($data->{'Number'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getCode()) {
            $data->{'Code'} = $object->getCode();
        }
        if (null !== $object->getExpireDate()) {
            $data->{'ExpireDate'} = $object->getExpireDate();
        }
        if (null !== $object->getExtendedPayment()) {
            $data->{'ExtendedPayment'} = $object->getExtendedPayment();
        }
        if (null !== $object->getManualApprovalCode()) {
            $data->{'ManualApprovalCode'} = $object->getManualApprovalCode();
        }
        if (null !== $object->getNumber()) {
            $data->{'Number'} = $object->getNumber();
        }

        return $data;
    }
}
