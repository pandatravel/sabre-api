<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQMiscSegment extends AbstractModel
{
    /**
     * Used to specify the location to be associated with the miscellaneous segment.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQMiscSegmentOriginLocation
     */
    protected $originLocation;
    /**
     * Used to specify free text information to be associated with the miscellaneous segment.
     *
     * @var string
     */
    protected $text;
    /**
     * Used to specify a particular vendor code.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQMiscSegmentVendorPrefs
     */
    protected $vendorPrefs;
    /**
     * Used to specify the date and time associated with the miscellaneous segment.
     *
     * @var string
     */
    protected $departureDateTime;
    /**
     * Used to denote a segment after which the miscellaneous segment needs to be placed.
     *
     * @var int
     */
    protected $insertAfter;
    /**
     * Used to specify the number of passengers associated with the miscellaneous segment.
     *
     * @var int
     */
    protected $numberInParty;
    /**
     * Used to specify the action code to be used to sell the segment.
    Example: 'GK'.

     *
     * @var string
     */
    protected $status;
    /**
     * Used to specify the type of the miscellaneous segment.
     *
     * @var string
     */
    protected $type;

    /**
     * Used to specify the location to be associated with the miscellaneous segment.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQMiscSegmentOriginLocation|null
     */
    public function getOriginLocation(): ?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQMiscSegmentOriginLocation
    {
        return $this->originLocation;
    }

    /**
     * Used to specify the location to be associated with the miscellaneous segment.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQMiscSegmentOriginLocation|null $originLocation
     *
     * @return self
     */
    public function setOriginLocation(?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQMiscSegmentOriginLocation $originLocation): self
    {
        $this->originLocation = $originLocation;

        return $this;
    }

    /**
     * Used to specify free text information to be associated with the miscellaneous segment.
     *
     * @return string|null
     */
    public function getText(): ?string
    {
        return $this->text;
    }

    /**
     * Used to specify free text information to be associated with the miscellaneous segment.
     *
     * @param string|null $text
     *
     * @return self
     */
    public function setText(?string $text): self
    {
        $this->text = $text;

        return $this;
    }

    /**
     * Used to specify a particular vendor code.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQMiscSegmentVendorPrefs|null
     */
    public function getVendorPrefs(): ?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQMiscSegmentVendorPrefs
    {
        return $this->vendorPrefs;
    }

    /**
     * Used to specify a particular vendor code.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQMiscSegmentVendorPrefs|null $vendorPrefs
     *
     * @return self
     */
    public function setVendorPrefs(?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQMiscSegmentVendorPrefs $vendorPrefs): self
    {
        $this->vendorPrefs = $vendorPrefs;

        return $this;
    }

    /**
     * Used to specify the date and time associated with the miscellaneous segment.
     *
     * @return string|null
     */
    public function getDepartureDateTime(): ?string
    {
        return $this->departureDateTime;
    }

    /**
     * Used to specify the date and time associated with the miscellaneous segment.
     *
     * @param string|null $departureDateTime
     *
     * @return self
     */
    public function setDepartureDateTime(?string $departureDateTime): self
    {
        $this->departureDateTime = $departureDateTime;

        return $this;
    }

    /**
     * Used to denote a segment after which the miscellaneous segment needs to be placed.
     *
     * @return int|null
     */
    public function getInsertAfter(): ?int
    {
        return $this->insertAfter;
    }

    /**
     * Used to denote a segment after which the miscellaneous segment needs to be placed.
     *
     * @param int|null $insertAfter
     *
     * @return self
     */
    public function setInsertAfter(?int $insertAfter): self
    {
        $this->insertAfter = $insertAfter;

        return $this;
    }

    /**
     * Used to specify the number of passengers associated with the miscellaneous segment.
     *
     * @return int|null
     */
    public function getNumberInParty(): ?int
    {
        return $this->numberInParty;
    }

    /**
     * Used to specify the number of passengers associated with the miscellaneous segment.
     *
     * @param int|null $numberInParty
     *
     * @return self
     */
    public function setNumberInParty(?int $numberInParty): self
    {
        $this->numberInParty = $numberInParty;

        return $this;
    }

    /**
     * Used to specify the action code to be used to sell the segment.
    Example: 'GK'.

     *
     * @return string|null
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Used to specify the action code to be used to sell the segment.
    Example: 'GK'.

     *
     * @param string|null $status
     *
     * @return self
     */
    public function setStatus(?string $status): self
    {
        $this->status = $status;

        return $this;
    }

    /**
     * Used to specify the type of the miscellaneous segment.
     *
     * @return string|null
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Used to specify the type of the miscellaneous segment.
     *
     * @param string|null $type
     *
     * @return self
     */
    public function setType(?string $type): self
    {
        $this->type = $type;

        return $this;
    }
}
