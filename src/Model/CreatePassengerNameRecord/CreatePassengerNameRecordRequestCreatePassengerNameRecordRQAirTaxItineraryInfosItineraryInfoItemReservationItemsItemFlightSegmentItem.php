<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItem extends AbstractModel
{
    /**
     * Arrival airport.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemArrivalAirport
     */
    protected $arrivalAirport;
    /**
     * Departure airport.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemDepartureAirport
     */
    protected $departureAirport;
    /**
     * Machine type.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemEquipment
     */
    protected $equipment;
    /**
     * Details on the specific fare break.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemFareBreakInfo
     */
    protected $fareBreakInfo;
    /**
     * Used to pass hidden city / via code.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemHiddenStops
     */
    protected $hiddenStops;
    /**
     * Marketing airline code.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemMarketingAirline
     */
    protected $marketingAirline;
    /**
     * Operating airline code.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemOperatingAirline
     */
    protected $operatingAirline;
    /**
     * Departure Date and Time.
     *
     * @var string
     */
    protected $departureDateTime;
    /**
     * Arrival Date and Time.
     *
     * @var string
     */
    protected $arrivalDateTime;
    /**
     * Marketing Flight Number.
     *
     * @var int
     */
    protected $flightNumber;
    /**
     * Booking Code.
     *
     * @var string
     */
    protected $resBookDesigCode;
    /**
     * Used to indicate whether the Flight segment is a forced connection.
     *
     * @var bool
     */
    protected $forceConnectionInd;
    /**
     * Used to indicate whether the Flight segment is a forced stop over.
     *
     * @var bool
     */
    protected $forceStopOverInd;

    /**
     * Arrival airport.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemArrivalAirport
     */
    public function getArrivalAirport(): ?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemArrivalAirport
    {
        return $this->arrivalAirport;
    }

    /**
     * Arrival airport.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemArrivalAirport $arrivalAirport
     *
     * @return self
     */
    public function setArrivalAirport(?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemArrivalAirport $arrivalAirport): self
    {
        $this->arrivalAirport = $arrivalAirport;

        return $this;
    }

    /**
     * Departure airport.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemDepartureAirport
     */
    public function getDepartureAirport(): ?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemDepartureAirport
    {
        return $this->departureAirport;
    }

    /**
     * Departure airport.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemDepartureAirport $departureAirport
     *
     * @return self
     */
    public function setDepartureAirport(?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemDepartureAirport $departureAirport): self
    {
        $this->departureAirport = $departureAirport;

        return $this;
    }

    /**
     * Machine type.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemEquipment
     */
    public function getEquipment(): ?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemEquipment
    {
        return $this->equipment;
    }

    /**
     * Machine type.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemEquipment $equipment
     *
     * @return self
     */
    public function setEquipment(?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemEquipment $equipment): self
    {
        $this->equipment = $equipment;

        return $this;
    }

    /**
     * Details on the specific fare break.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemFareBreakInfo
     */
    public function getFareBreakInfo(): ?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemFareBreakInfo
    {
        return $this->fareBreakInfo;
    }

    /**
     * Details on the specific fare break.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemFareBreakInfo $fareBreakInfo
     *
     * @return self
     */
    public function setFareBreakInfo(?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemFareBreakInfo $fareBreakInfo): self
    {
        $this->fareBreakInfo = $fareBreakInfo;

        return $this;
    }

    /**
     * Used to pass hidden city / via code.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemHiddenStops
     */
    public function getHiddenStops(): ?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemHiddenStops
    {
        return $this->hiddenStops;
    }

    /**
     * Used to pass hidden city / via code.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemHiddenStops $hiddenStops
     *
     * @return self
     */
    public function setHiddenStops(?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemHiddenStops $hiddenStops): self
    {
        $this->hiddenStops = $hiddenStops;

        return $this;
    }

    /**
     * Marketing airline code.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemMarketingAirline
     */
    public function getMarketingAirline(): ?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemMarketingAirline
    {
        return $this->marketingAirline;
    }

    /**
     * Marketing airline code.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemMarketingAirline $marketingAirline
     *
     * @return self
     */
    public function setMarketingAirline(?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemMarketingAirline $marketingAirline): self
    {
        $this->marketingAirline = $marketingAirline;

        return $this;
    }

    /**
     * Operating airline code.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemOperatingAirline
     */
    public function getOperatingAirline(): ?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemOperatingAirline
    {
        return $this->operatingAirline;
    }

    /**
     * Operating airline code.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemOperatingAirline $operatingAirline
     *
     * @return self
     */
    public function setOperatingAirline(?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirTaxItineraryInfosItineraryInfoItemReservationItemsItemFlightSegmentItemOperatingAirline $operatingAirline): self
    {
        $this->operatingAirline = $operatingAirline;

        return $this;
    }

    /**
     * Departure Date and Time.
     *
     * @return string
     */
    public function getDepartureDateTime(): ?string
    {
        return $this->departureDateTime;
    }

    /**
     * Departure Date and Time.
     *
     * @param string $departureDateTime
     *
     * @return self
     */
    public function setDepartureDateTime(?string $departureDateTime): self
    {
        $this->departureDateTime = $departureDateTime;

        return $this;
    }

    /**
     * Arrival Date and Time.
     *
     * @return string
     */
    public function getArrivalDateTime(): ?string
    {
        return $this->arrivalDateTime;
    }

    /**
     * Arrival Date and Time.
     *
     * @param string $arrivalDateTime
     *
     * @return self
     */
    public function setArrivalDateTime(?string $arrivalDateTime): self
    {
        $this->arrivalDateTime = $arrivalDateTime;

        return $this;
    }

    /**
     * Marketing Flight Number.
     *
     * @return int
     */
    public function getFlightNumber(): ?int
    {
        return $this->flightNumber;
    }

    /**
     * Marketing Flight Number.
     *
     * @param int $flightNumber
     *
     * @return self
     */
    public function setFlightNumber(?int $flightNumber): self
    {
        $this->flightNumber = $flightNumber;

        return $this;
    }

    /**
     * Booking Code.
     *
     * @return string
     */
    public function getResBookDesigCode(): ?string
    {
        return $this->resBookDesigCode;
    }

    /**
     * Booking Code.
     *
     * @param string $resBookDesigCode
     *
     * @return self
     */
    public function setResBookDesigCode(?string $resBookDesigCode): self
    {
        $this->resBookDesigCode = $resBookDesigCode;

        return $this;
    }

    /**
     * Used to indicate whether the Flight segment is a forced connection.
     *
     * @return bool
     */
    public function getForceConnectionInd(): ?bool
    {
        return $this->forceConnectionInd;
    }

    /**
     * Used to indicate whether the Flight segment is a forced connection.
     *
     * @param bool $forceConnectionInd
     *
     * @return self
     */
    public function setForceConnectionInd(?bool $forceConnectionInd): self
    {
        $this->forceConnectionInd = $forceConnectionInd;

        return $this;
    }

    /**
     * Used to indicate whether the Flight segment is a forced stop over.
     *
     * @return bool
     */
    public function getForceStopOverInd(): ?bool
    {
        return $this->forceStopOverInd;
    }

    /**
     * Used to indicate whether the Flight segment is a forced stop over.
     *
     * @param bool $forceStopOverInd
     *
     * @return self
     */
    public function setForceStopOverInd(?bool $forceStopOverInd): self
    {
        $this->forceStopOverInd = $forceStopOverInd;

        return $this;
    }
}
