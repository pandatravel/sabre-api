<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersAirExtras extends AbstractModel
{
    /**
     * Used to pass the frequent flyer information.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersAirExtrasCustLoyaltyItem[]
     */
    protected $custLoyalty;
    /**
     * Used to specify a particular air extra to be included.
     *
     * @var string[]
     */
    protected $qualifier;
    /**
     * @var string[]
     */
    protected $sSRCode;
    /**
     * Used to specify an eTicket number to view air extra-related information for.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersAirExtrasTicketingItem[]
     */
    protected $ticketing;
    /**
     * Used to indicate for the system to include air extras.
     *
     * @var bool
     */
    protected $ind;
    /**
     * This attribute is not in use.
     *
     * @var bool
     */
    protected $summary;

    /**
     * Used to pass the frequent flyer information.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersAirExtrasCustLoyaltyItem[]
     */
    public function getCustLoyalty(): array
    {
        return $this->custLoyalty;
    }

    /**
     * Used to pass the frequent flyer information.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersAirExtrasCustLoyaltyItem[] $custLoyalty
     *
     * @return self
     */
    public function setCustLoyalty(array $custLoyalty): self
    {
        $this->custLoyalty = $custLoyalty;

        return $this;
    }

    /**
     * Used to specify a particular air extra to be included.
     *
     * @return string[]
     */
    public function getQualifier(): array
    {
        return $this->qualifier;
    }

    /**
     * Used to specify a particular air extra to be included.
     *
     * @param string[] $qualifier
     *
     * @return self
     */
    public function setQualifier(array $qualifier): self
    {
        $this->qualifier = $qualifier;

        return $this;
    }

    /**
     * @return string[]
     */
    public function getSSRCode(): array
    {
        return $this->sSRCode;
    }

    /**
     * @param string[] $sSRCode
     *
     * @return self
     */
    public function setSSRCode(array $sSRCode): self
    {
        $this->sSRCode = $sSRCode;

        return $this;
    }

    /**
     * Used to specify an eTicket number to view air extra-related information for.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersAirExtrasTicketingItem[]
     */
    public function getTicketing(): array
    {
        return $this->ticketing;
    }

    /**
     * Used to specify an eTicket number to view air extra-related information for.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersAirExtrasTicketingItem[] $ticketing
     *
     * @return self
     */
    public function setTicketing(array $ticketing): self
    {
        $this->ticketing = $ticketing;

        return $this;
    }

    /**
     * Used to indicate for the system to include air extras.
     *
     * @return bool
     */
    public function getInd(): bool
    {
        return $this->ind;
    }

    /**
     * Used to indicate for the system to include air extras.
     *
     * @param bool $ind
     *
     * @return self
     */
    public function setInd(bool $ind): self
    {
        $this->ind = $ind;

        return $this;
    }

    /**
     * This attribute is not in use.
     *
     * @return bool
     */
    public function getSummary(): bool
    {
        return $this->summary;
    }

    /**
     * This attribute is not in use.
     *
     * @param bool $summary
     *
     * @return self
     */
    public function setSummary(bool $summary): self
    {
        $this->summary = $summary;

        return $this;
    }
}
