<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItem extends AbstractModel
{
    /**
     * The baggage associations.
     *
     * @var CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociations
     */
    protected $associations;
    /**
     * The carrier code, whose baggage provisions apply.
     *
     * @var string
     */
    protected $carrierWhoseBaggageProvisionsApply;
    /**
     * The Commissionable indicator.
     *
     * @var string
     */
    protected $commissionable;
    /**
     * The fee application indicator.
     *
     * @var string
     */
    protected $feeApplicationIndicator;
    /**
     * The fee not guaranteed indicator.
     *
     * @var string
     */
    protected $feeNotGuaranteedIndicator;
    /**
     * The first occurrence.
     *
     * @var string
     */
    protected $firstOccurrence;
    /**
     * The frequent flier tier level.
     *
     * @var string
     */
    protected $fQTVCarrierFiledTierLevel;
    /**
     * The interlineable indicator.
     *
     * @var string
     */
    protected $interlineable;
    /**
     * The last occurrence.
     *
     * @var string
     */
    protected $lastOccurrence;
    /**
     * The no charge / not available indicator.
     *
     * @var string
     */
    protected $noChargeNotAvailableIndicator;
    /**
     * The number of BDI pieced.
     *
     * @var string
     */
    protected $numPiecesBDI;
    /**
     * The number of ITR pieces.
     *
     * @var string[]
     */
    protected $numPiecesITR;
    /**
     * The passenger type information.
     *
     * @var CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemPassengerType
     */
    protected $passengerType;
    /**
     * The price information.
     *
     * @var CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemPriceInformation
     */
    protected $priceInformation;
    /**
     * The provision type information.
     *
     * @var string
     */
    protected $provisionType;
    /**
     * The refund form information.
     *
     * @var string
     */
    protected $refundForm;
    /**
     * The refund reissue indicator.
     *
     * @var string
     */
    protected $refundReissue;
    /**
     * The simultaneous ticket indicator.
     *
     * @var string
     */
    protected $simultaneousTicketIndicator;
    /**
     * The sub code information.
     *
     * @var CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemSubCodeInfo
     */
    protected $subCodeInfo;
    /**
     * The weight limit information.
     *
     * @var CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemWeightLimit
     */
    protected $weightLimit;
    /**
     * Used as a reference place holder.
    Matches PriceQuote.MiscInformation.BaggageInfo.SubCodeProperties[n].RPH.

     *
     * @var string
     */
    protected $rPH;

    /**
     * The baggage associations.
     *
     * @return CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociations|null
     */
    public function getAssociations(): ?CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociations
    {
        return $this->associations;
    }

    /**
     * The baggage associations.
     *
     * @param CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociations|null $associations
     *
     * @return self
     */
    public function setAssociations(?CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemAssociations $associations): self
    {
        $this->associations = $associations;

        return $this;
    }

    /**
     * The carrier code, whose baggage provisions apply.
     *
     * @return string|null
     */
    public function getCarrierWhoseBaggageProvisionsApply(): ?string
    {
        return $this->carrierWhoseBaggageProvisionsApply;
    }

    /**
     * The carrier code, whose baggage provisions apply.
     *
     * @param string|null $carrierWhoseBaggageProvisionsApply
     *
     * @return self
     */
    public function setCarrierWhoseBaggageProvisionsApply(?string $carrierWhoseBaggageProvisionsApply): self
    {
        $this->carrierWhoseBaggageProvisionsApply = $carrierWhoseBaggageProvisionsApply;

        return $this;
    }

    /**
     * The Commissionable indicator.
     *
     * @return string|null
     */
    public function getCommissionable(): ?string
    {
        return $this->commissionable;
    }

    /**
     * The Commissionable indicator.
     *
     * @param string|null $commissionable
     *
     * @return self
     */
    public function setCommissionable(?string $commissionable): self
    {
        $this->commissionable = $commissionable;

        return $this;
    }

    /**
     * The fee application indicator.
     *
     * @return string|null
     */
    public function getFeeApplicationIndicator(): ?string
    {
        return $this->feeApplicationIndicator;
    }

    /**
     * The fee application indicator.
     *
     * @param string|null $feeApplicationIndicator
     *
     * @return self
     */
    public function setFeeApplicationIndicator(?string $feeApplicationIndicator): self
    {
        $this->feeApplicationIndicator = $feeApplicationIndicator;

        return $this;
    }

    /**
     * The fee not guaranteed indicator.
     *
     * @return string|null
     */
    public function getFeeNotGuaranteedIndicator(): ?string
    {
        return $this->feeNotGuaranteedIndicator;
    }

    /**
     * The fee not guaranteed indicator.
     *
     * @param string|null $feeNotGuaranteedIndicator
     *
     * @return self
     */
    public function setFeeNotGuaranteedIndicator(?string $feeNotGuaranteedIndicator): self
    {
        $this->feeNotGuaranteedIndicator = $feeNotGuaranteedIndicator;

        return $this;
    }

    /**
     * The first occurrence.
     *
     * @return string|null
     */
    public function getFirstOccurrence(): ?string
    {
        return $this->firstOccurrence;
    }

    /**
     * The first occurrence.
     *
     * @param string|null $firstOccurrence
     *
     * @return self
     */
    public function setFirstOccurrence(?string $firstOccurrence): self
    {
        $this->firstOccurrence = $firstOccurrence;

        return $this;
    }

    /**
     * The frequent flier tier level.
     *
     * @return string|null
     */
    public function getFQTVCarrierFiledTierLevel(): ?string
    {
        return $this->fQTVCarrierFiledTierLevel;
    }

    /**
     * The frequent flier tier level.
     *
     * @param string|null $fQTVCarrierFiledTierLevel
     *
     * @return self
     */
    public function setFQTVCarrierFiledTierLevel(?string $fQTVCarrierFiledTierLevel): self
    {
        $this->fQTVCarrierFiledTierLevel = $fQTVCarrierFiledTierLevel;

        return $this;
    }

    /**
     * The interlineable indicator.
     *
     * @return string|null
     */
    public function getInterlineable(): ?string
    {
        return $this->interlineable;
    }

    /**
     * The interlineable indicator.
     *
     * @param string|null $interlineable
     *
     * @return self
     */
    public function setInterlineable(?string $interlineable): self
    {
        $this->interlineable = $interlineable;

        return $this;
    }

    /**
     * The last occurrence.
     *
     * @return string|null
     */
    public function getLastOccurrence(): ?string
    {
        return $this->lastOccurrence;
    }

    /**
     * The last occurrence.
     *
     * @param string|null $lastOccurrence
     *
     * @return self
     */
    public function setLastOccurrence(?string $lastOccurrence): self
    {
        $this->lastOccurrence = $lastOccurrence;

        return $this;
    }

    /**
     * The no charge / not available indicator.
     *
     * @return string|null
     */
    public function getNoChargeNotAvailableIndicator(): ?string
    {
        return $this->noChargeNotAvailableIndicator;
    }

    /**
     * The no charge / not available indicator.
     *
     * @param string|null $noChargeNotAvailableIndicator
     *
     * @return self
     */
    public function setNoChargeNotAvailableIndicator(?string $noChargeNotAvailableIndicator): self
    {
        $this->noChargeNotAvailableIndicator = $noChargeNotAvailableIndicator;

        return $this;
    }

    /**
     * The number of BDI pieced.
     *
     * @return string|null
     */
    public function getNumPiecesBDI(): ?string
    {
        return $this->numPiecesBDI;
    }

    /**
     * The number of BDI pieced.
     *
     * @param string|null $numPiecesBDI
     *
     * @return self
     */
    public function setNumPiecesBDI(?string $numPiecesBDI): self
    {
        $this->numPiecesBDI = $numPiecesBDI;

        return $this;
    }

    /**
     * The number of ITR pieces.
     *
     * @return string[]|null
     */
    public function getNumPiecesITR(): ?array
    {
        return $this->numPiecesITR;
    }

    /**
     * The number of ITR pieces.
     *
     * @param string[]|null $numPiecesITR
     *
     * @return self
     */
    public function setNumPiecesITR(?array $numPiecesITR): self
    {
        $this->numPiecesITR = $numPiecesITR;

        return $this;
    }

    /**
     * The passenger type information.
     *
     * @return CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemPassengerType|null
     */
    public function getPassengerType(): ?CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemPassengerType
    {
        return $this->passengerType;
    }

    /**
     * The passenger type information.
     *
     * @param CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemPassengerType|null $passengerType
     *
     * @return self
     */
    public function setPassengerType(?CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemPassengerType $passengerType): self
    {
        $this->passengerType = $passengerType;

        return $this;
    }

    /**
     * The price information.
     *
     * @return CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemPriceInformation|null
     */
    public function getPriceInformation(): ?CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemPriceInformation
    {
        return $this->priceInformation;
    }

    /**
     * The price information.
     *
     * @param CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemPriceInformation|null $priceInformation
     *
     * @return self
     */
    public function setPriceInformation(?CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemPriceInformation $priceInformation): self
    {
        $this->priceInformation = $priceInformation;

        return $this;
    }

    /**
     * The provision type information.
     *
     * @return string|null
     */
    public function getProvisionType(): ?string
    {
        return $this->provisionType;
    }

    /**
     * The provision type information.
     *
     * @param string|null $provisionType
     *
     * @return self
     */
    public function setProvisionType(?string $provisionType): self
    {
        $this->provisionType = $provisionType;

        return $this;
    }

    /**
     * The refund form information.
     *
     * @return string|null
     */
    public function getRefundForm(): ?string
    {
        return $this->refundForm;
    }

    /**
     * The refund form information.
     *
     * @param string|null $refundForm
     *
     * @return self
     */
    public function setRefundForm(?string $refundForm): self
    {
        $this->refundForm = $refundForm;

        return $this;
    }

    /**
     * The refund reissue indicator.
     *
     * @return string|null
     */
    public function getRefundReissue(): ?string
    {
        return $this->refundReissue;
    }

    /**
     * The refund reissue indicator.
     *
     * @param string|null $refundReissue
     *
     * @return self
     */
    public function setRefundReissue(?string $refundReissue): self
    {
        $this->refundReissue = $refundReissue;

        return $this;
    }

    /**
     * The simultaneous ticket indicator.
     *
     * @return string|null
     */
    public function getSimultaneousTicketIndicator(): ?string
    {
        return $this->simultaneousTicketIndicator;
    }

    /**
     * The simultaneous ticket indicator.
     *
     * @param string|null $simultaneousTicketIndicator
     *
     * @return self
     */
    public function setSimultaneousTicketIndicator(?string $simultaneousTicketIndicator): self
    {
        $this->simultaneousTicketIndicator = $simultaneousTicketIndicator;

        return $this;
    }

    /**
     * The sub code information.
     *
     * @return CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemSubCodeInfo|null
     */
    public function getSubCodeInfo(): ?CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemSubCodeInfo
    {
        return $this->subCodeInfo;
    }

    /**
     * The sub code information.
     *
     * @param CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemSubCodeInfo|null $subCodeInfo
     *
     * @return self
     */
    public function setSubCodeInfo(?CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemSubCodeInfo $subCodeInfo): self
    {
        $this->subCodeInfo = $subCodeInfo;

        return $this;
    }

    /**
     * The weight limit information.
     *
     * @return CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemWeightLimit|null
     */
    public function getWeightLimit(): ?CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemWeightLimit
    {
        return $this->weightLimit;
    }

    /**
     * The weight limit information.
     *
     * @param CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemWeightLimit|null $weightLimit
     *
     * @return self
     */
    public function setWeightLimit(?CreatePassengerNameRecordResponseCreatePassengerNameRecordRSAirPriceItemPriceQuotePricedItineraryAirItineraryPricingInfoItemBaggageProvisionsItemWeightLimit $weightLimit): self
    {
        $this->weightLimit = $weightLimit;

        return $this;
    }

    /**
     * Used as a reference place holder.
    Matches PriceQuote.MiscInformation.BaggageInfo.SubCodeProperties[n].RPH.

     *
     * @return string|null
     */
    public function getRPH(): ?string
    {
        return $this->rPH;
    }

    /**
     * Used as a reference place holder.
    Matches PriceQuote.MiscInformation.BaggageInfo.SubCodeProperties[n].RPH.

     *
     * @param string|null $rPH
     *
     * @return self
     */
    public function setRPH(?string $rPH): self
    {
        $this->rPH = $rPH;

        return $this;
    }
}
