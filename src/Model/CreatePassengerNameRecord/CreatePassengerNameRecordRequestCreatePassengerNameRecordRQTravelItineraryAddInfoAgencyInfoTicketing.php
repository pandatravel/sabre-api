<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQTravelItineraryAddInfoAgencyInfoTicketing extends AbstractModel
{
    /**
     * pseudo city code.
     *
     * @var string
     */
    protected $pseudoCityCode;
    /**
     * queue number.
     *
     * @var int
     */
    protected $queueNumber;
    /**
     * queue name.
     *
     * @var string
     */
    protected $queueName;
    /**
     * miscellaneous free text.
     *
     * @var string
     */
    protected $shortText;
    /**
     * ticketing time limit, follows this format: MM-DDTHH:00, must be at the top of the hour.
     *
     * @var string
     */
    protected $ticketTimeLimit;
    /**
     * acceptable values are: "7TAW", "7TAX", "7T-A", 8(time), or 8(time/(date).
     *
     * @var string
     */
    protected $ticketType;

    /**
     * pseudo city code.
     *
     * @return string
     */
    public function getPseudoCityCode(): ?string
    {
        return $this->pseudoCityCode;
    }

    /**
     * pseudo city code.
     *
     * @param string $pseudoCityCode
     *
     * @return self
     */
    public function setPseudoCityCode(?string $pseudoCityCode): self
    {
        $this->pseudoCityCode = $pseudoCityCode;

        return $this;
    }

    /**
     * queue number.
     *
     * @return int
     */
    public function getQueueNumber(): ?int
    {
        return $this->queueNumber;
    }

    /**
     * queue number.
     *
     * @param int $queueNumber
     *
     * @return self
     */
    public function setQueueNumber(?int $queueNumber): self
    {
        $this->queueNumber = $queueNumber;

        return $this;
    }

    /**
     * queue name.
     *
     * @return string
     */
    public function getQueueName(): ?string
    {
        return $this->queueName;
    }

    /**
     * queue name.
     *
     * @param string $queueName
     *
     * @return self
     */
    public function setQueueName(?string $queueName): self
    {
        $this->queueName = $queueName;

        return $this;
    }

    /**
     * miscellaneous free text.
     *
     * @return string
     */
    public function getShortText(): ?string
    {
        return $this->shortText;
    }

    /**
     * miscellaneous free text.
     *
     * @param string $shortText
     *
     * @return self
     */
    public function setShortText(?string $shortText): self
    {
        $this->shortText = $shortText;

        return $this;
    }

    /**
     * ticketing time limit, follows this format: MM-DDTHH:00, must be at the top of the hour.
     *
     * @return string
     */
    public function getTicketTimeLimit(): ?string
    {
        return $this->ticketTimeLimit;
    }

    /**
     * ticketing time limit, follows this format: MM-DDTHH:00, must be at the top of the hour.
     *
     * @param string $ticketTimeLimit
     *
     * @return self
     */
    public function setTicketTimeLimit(?string $ticketTimeLimit): self
    {
        $this->ticketTimeLimit = $ticketTimeLimit;

        return $this;
    }

    /**
     * acceptable values are: "7TAW", "7TAX", "7T-A", 8(time), or 8(time/(date).
     *
     * @return string
     */
    public function getTicketType(): ?string
    {
        return $this->ticketType;
    }

    /**
     * acceptable values are: "7TAW", "7TAX", "7T-A", 8(time), or 8(time/(date).
     *
     * @param string $ticketType
     *
     * @return self
     */
    public function setTicketType(?string $ticketType): self
    {
        $this->ticketType = $ticketType;

        return $this;
    }
}
