<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQTravelItineraryAddInfoAgencyInfoTicketing extends AbstractModel
{
    /**
     * The pseudo city code.
     *
     * @var string
     */
    protected $pseudoCityCode;
    /**
     * The queue number.
     *
     * @var int
     */
    protected $queueNumber;
    /**
     * The queue name.
     *
     * @var string
     */
    protected $queueName;
    /**
     * The miscellaneous free text.
     *
     * @var string
     */
    protected $shortText;
    /**
     * 'TicketTimeLimit' is used to specify the ticket time limit.
    'TicketTimeLimit' is shown in the following format - MM-DDTHH:00.
    'TicketTimeLimit' must be at the top of the hour.
    This is a date time type that forces both the date and the time to be specified.
    The year and seconds can be omitted.
    Example formats - 'yyyy-mm-ddThh:mm:ss', 'mm-ddThh:mm:ss', 'mm-ddThh:mm', 'yyyy-mm-ddThh:mm'

     *
     * @var string
     */
    protected $ticketTimeLimit;
    /**
     * Used to pass the ticketing type.
    Acceptable values are: '7TAW', '7TAX', '7T-A', '8(time)', or '8(time/(date)'.

     *
     * @var string
     */
    protected $ticketType;

    /**
     * The pseudo city code.
     *
     * @return string|null
     */
    public function getPseudoCityCode(): ?string
    {
        return $this->pseudoCityCode;
    }

    /**
     * The pseudo city code.
     *
     * @param string|null $pseudoCityCode
     *
     * @return self
     */
    public function setPseudoCityCode(?string $pseudoCityCode): self
    {
        $this->pseudoCityCode = $pseudoCityCode;

        return $this;
    }

    /**
     * The queue number.
     *
     * @return int|null
     */
    public function getQueueNumber(): ?int
    {
        return $this->queueNumber;
    }

    /**
     * The queue number.
     *
     * @param int|null $queueNumber
     *
     * @return self
     */
    public function setQueueNumber(?int $queueNumber): self
    {
        $this->queueNumber = $queueNumber;

        return $this;
    }

    /**
     * The queue name.
     *
     * @return string|null
     */
    public function getQueueName(): ?string
    {
        return $this->queueName;
    }

    /**
     * The queue name.
     *
     * @param string|null $queueName
     *
     * @return self
     */
    public function setQueueName(?string $queueName): self
    {
        $this->queueName = $queueName;

        return $this;
    }

    /**
     * The miscellaneous free text.
     *
     * @return string|null
     */
    public function getShortText(): ?string
    {
        return $this->shortText;
    }

    /**
     * The miscellaneous free text.
     *
     * @param string|null $shortText
     *
     * @return self
     */
    public function setShortText(?string $shortText): self
    {
        $this->shortText = $shortText;

        return $this;
    }

    /**
     * 'TicketTimeLimit' is used to specify the ticket time limit.
    'TicketTimeLimit' is shown in the following format - MM-DDTHH:00.
    'TicketTimeLimit' must be at the top of the hour.
    This is a date time type that forces both the date and the time to be specified.
    The year and seconds can be omitted.
    Example formats - 'yyyy-mm-ddThh:mm:ss', 'mm-ddThh:mm:ss', 'mm-ddThh:mm', 'yyyy-mm-ddThh:mm'

     *
     * @return string|null
     */
    public function getTicketTimeLimit(): ?string
    {
        return $this->ticketTimeLimit;
    }

    /**
     * 'TicketTimeLimit' is used to specify the ticket time limit.
    'TicketTimeLimit' is shown in the following format - MM-DDTHH:00.
    'TicketTimeLimit' must be at the top of the hour.
    This is a date time type that forces both the date and the time to be specified.
    The year and seconds can be omitted.
    Example formats - 'yyyy-mm-ddThh:mm:ss', 'mm-ddThh:mm:ss', 'mm-ddThh:mm', 'yyyy-mm-ddThh:mm'

     *
     * @param string|null $ticketTimeLimit
     *
     * @return self
     */
    public function setTicketTimeLimit(?string $ticketTimeLimit): self
    {
        $this->ticketTimeLimit = $ticketTimeLimit;

        return $this;
    }

    /**
     * Used to pass the ticketing type.
    Acceptable values are: '7TAW', '7TAX', '7T-A', '8(time)', or '8(time/(date)'.

     *
     * @return string|null
     */
    public function getTicketType(): ?string
    {
        return $this->ticketType;
    }

    /**
     * Used to pass the ticketing type.
    Acceptable values are: '7TAW', '7TAX', '7T-A', '8(time)', or '8(time/(date)'.

     *
     * @param string|null $ticketType
     *
     * @return self
     */
    public function setTicketType(?string $ticketType): self
    {
        $this->ticketType = $ticketType;

        return $this;
    }
}
