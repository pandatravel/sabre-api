<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceComparison extends AbstractModel
{
    /**
     * Used to define the acceptable price increase threshold.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceComparisonAcceptablePriceIncrease
     */
    protected $acceptablePriceIncrease;
    /**
     * Used to define the acceptable price decrease threshold.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceComparisonAcceptablePriceDecrease
     */
    protected $acceptablePriceDecrease;
    /**
     * Used to specify the total amount associated with the itinerary returned via the previous shopping method for comparision purposes against the current price being returned for the same itinerary.
     *
     * @var float
     */
    protected $amountSpecified;

    /**
     * Used to define the acceptable price increase threshold.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceComparisonAcceptablePriceIncrease
     */
    public function getAcceptablePriceIncrease(): ?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceComparisonAcceptablePriceIncrease
    {
        return $this->acceptablePriceIncrease;
    }

    /**
     * Used to define the acceptable price increase threshold.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceComparisonAcceptablePriceIncrease $acceptablePriceIncrease
     *
     * @return self
     */
    public function setAcceptablePriceIncrease(?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceComparisonAcceptablePriceIncrease $acceptablePriceIncrease): self
    {
        $this->acceptablePriceIncrease = $acceptablePriceIncrease;

        return $this;
    }

    /**
     * Used to define the acceptable price decrease threshold.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceComparisonAcceptablePriceDecrease
     */
    public function getAcceptablePriceDecrease(): ?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceComparisonAcceptablePriceDecrease
    {
        return $this->acceptablePriceDecrease;
    }

    /**
     * Used to define the acceptable price decrease threshold.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceComparisonAcceptablePriceDecrease $acceptablePriceDecrease
     *
     * @return self
     */
    public function setAcceptablePriceDecrease(?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceComparisonAcceptablePriceDecrease $acceptablePriceDecrease): self
    {
        $this->acceptablePriceDecrease = $acceptablePriceDecrease;

        return $this;
    }

    /**
     * Used to specify the total amount associated with the itinerary returned via the previous shopping method for comparision purposes against the current price being returned for the same itinerary.
     *
     * @return float
     */
    public function getAmountSpecified(): ?float
    {
        return $this->amountSpecified;
    }

    /**
     * Used to specify the total amount associated with the itinerary returned via the previous shopping method for comparision purposes against the current price being returned for the same itinerary.
     *
     * @param float $amountSpecified
     *
     * @return self
     */
    public function setAmountSpecified(?float $amountSpecified): self
    {
        $this->amountSpecified = $amountSpecified;

        return $this;
    }
}
