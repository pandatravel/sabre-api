<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiers extends AbstractModel
{
    /**
     * 'AirExtras' are utilized to display air extra-related content, i.e. optional services, ancillary services, etc.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersAirExtras
     */
    protected $airExtras;
    /**
     * Used to define the baggage allowance qualifiers.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersBaggageAllowanceItem[]
     */
    protected $baggageAllowance;
    /**
     * Details of the commission being claimed.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersCommission
     */
    protected $commission;
    /**
     * Used to specify the DK customer number.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersCustomer
     */
    protected $customer;
    /**
     * Used to specify miscellaneous text in the endorsements field.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersEndorsements
     */
    protected $endorsements;
    /**
     * The hemisphere code.
     *
     * @var string
     */
    protected $hemisphereCode;
    /**
     * The journey code.
     *
     * @var string
     */
    protected $journeyCode;
    /**
     * Used to instruct the system to consider multi-ticket solutions to find the lowest possible price.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersMultiTicket
     */
    protected $multiTicket;
    /**
     * The tour code details.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersTourCode
     */
    protected $tourCode;
    /**
     * Used to specify a validation method.
     *
     * @var string
     */
    protected $validationMethod;

    /**
     * 'AirExtras' are utilized to display air extra-related content, i.e. optional services, ancillary services, etc.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersAirExtras
     */
    public function getAirExtras(): CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersAirExtras
    {
        return $this->airExtras;
    }

    /**
     * 'AirExtras' are utilized to display air extra-related content, i.e. optional services, ancillary services, etc.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersAirExtras $airExtras
     *
     * @return self
     */
    public function setAirExtras(CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersAirExtras $airExtras): self
    {
        $this->airExtras = $airExtras;

        return $this;
    }

    /**
     * Used to define the baggage allowance qualifiers.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersBaggageAllowanceItem[]
     */
    public function getBaggageAllowance(): array
    {
        return $this->baggageAllowance;
    }

    /**
     * Used to define the baggage allowance qualifiers.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersBaggageAllowanceItem[] $baggageAllowance
     *
     * @return self
     */
    public function setBaggageAllowance(array $baggageAllowance): self
    {
        $this->baggageAllowance = $baggageAllowance;

        return $this;
    }

    /**
     * Details of the commission being claimed.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersCommission
     */
    public function getCommission(): CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersCommission
    {
        return $this->commission;
    }

    /**
     * Details of the commission being claimed.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersCommission $commission
     *
     * @return self
     */
    public function setCommission(CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersCommission $commission): self
    {
        $this->commission = $commission;

        return $this;
    }

    /**
     * Used to specify the DK customer number.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersCustomer
     */
    public function getCustomer(): CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersCustomer
    {
        return $this->customer;
    }

    /**
     * Used to specify the DK customer number.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersCustomer $customer
     *
     * @return self
     */
    public function setCustomer(CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersCustomer $customer): self
    {
        $this->customer = $customer;

        return $this;
    }

    /**
     * Used to specify miscellaneous text in the endorsements field.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersEndorsements
     */
    public function getEndorsements(): CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersEndorsements
    {
        return $this->endorsements;
    }

    /**
     * Used to specify miscellaneous text in the endorsements field.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersEndorsements $endorsements
     *
     * @return self
     */
    public function setEndorsements(CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersEndorsements $endorsements): self
    {
        $this->endorsements = $endorsements;

        return $this;
    }

    /**
     * The hemisphere code.
     *
     * @return string
     */
    public function getHemisphereCode(): string
    {
        return $this->hemisphereCode;
    }

    /**
     * The hemisphere code.
     *
     * @param string $hemisphereCode
     *
     * @return self
     */
    public function setHemisphereCode(string $hemisphereCode): self
    {
        $this->hemisphereCode = $hemisphereCode;

        return $this;
    }

    /**
     * The journey code.
     *
     * @return string
     */
    public function getJourneyCode(): string
    {
        return $this->journeyCode;
    }

    /**
     * The journey code.
     *
     * @param string $journeyCode
     *
     * @return self
     */
    public function setJourneyCode(string $journeyCode): self
    {
        $this->journeyCode = $journeyCode;

        return $this;
    }

    /**
     * Used to instruct the system to consider multi-ticket solutions to find the lowest possible price.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersMultiTicket
     */
    public function getMultiTicket(): CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersMultiTicket
    {
        return $this->multiTicket;
    }

    /**
     * Used to instruct the system to consider multi-ticket solutions to find the lowest possible price.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersMultiTicket $multiTicket
     *
     * @return self
     */
    public function setMultiTicket(CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersMultiTicket $multiTicket): self
    {
        $this->multiTicket = $multiTicket;

        return $this;
    }

    /**
     * The tour code details.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersTourCode
     */
    public function getTourCode(): CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersTourCode
    {
        return $this->tourCode;
    }

    /**
     * The tour code details.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersTourCode $tourCode
     *
     * @return self
     */
    public function setTourCode(CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiersMiscQualifiersTourCode $tourCode): self
    {
        $this->tourCode = $tourCode;

        return $this;
    }

    /**
     * Used to specify a validation method.
     *
     * @return string
     */
    public function getValidationMethod(): string
    {
        return $this->validationMethod;
    }

    /**
     * Used to specify a validation method.
     *
     * @param string $validationMethod
     *
     * @return self
     */
    public function setValidationMethod(string $validationMethod): self
    {
        $this->validationMethod = $validationMethod;

        return $this;
    }
}
