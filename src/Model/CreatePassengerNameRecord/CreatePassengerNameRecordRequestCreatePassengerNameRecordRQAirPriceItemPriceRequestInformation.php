<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\CreatePassengerNameRecord;

use Ammonkc\SabreApi\AbstractModel;

class CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformation extends AbstractModel
{
    /**
     * Used to define all the pricing qualifiers.
     *
     * @var CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiers
     */
    protected $optionalQualifiers;
    /**
     * Used to instruct the system to request Alternative Pricing.
    Please note that 'AlternativePricing' cannot be combined with 'PricingQualifiers.BargainFinder'.

     *
     * @var bool
     */
    protected $alternativePricing;
    /**
     * Used to instruct the system to create an FP line for future ticketing.
     *
     * @var bool
     */
    protected $futureTicket;
    /**
     * This attribute is not used.
     *
     * @var bool
     */
    protected $manual;
    /**
     * Used to instruct the system to retain the pricing response and create a price quote record.
     *
     * @var bool
     */
    protected $retain;

    /**
     * Used to define all the pricing qualifiers.
     *
     * @return CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiers|null
     */
    public function getOptionalQualifiers(): ?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiers
    {
        return $this->optionalQualifiers;
    }

    /**
     * Used to define all the pricing qualifiers.
     *
     * @param CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiers|null $optionalQualifiers
     *
     * @return self
     */
    public function setOptionalQualifiers(?CreatePassengerNameRecordRequestCreatePassengerNameRecordRQAirPriceItemPriceRequestInformationOptionalQualifiers $optionalQualifiers): self
    {
        $this->optionalQualifiers = $optionalQualifiers;

        return $this;
    }

    /**
     * Used to instruct the system to request Alternative Pricing.
    Please note that 'AlternativePricing' cannot be combined with 'PricingQualifiers.BargainFinder'.

     *
     * @return bool|null
     */
    public function getAlternativePricing(): ?bool
    {
        return $this->alternativePricing;
    }

    /**
     * Used to instruct the system to request Alternative Pricing.
    Please note that 'AlternativePricing' cannot be combined with 'PricingQualifiers.BargainFinder'.

     *
     * @param bool|null $alternativePricing
     *
     * @return self
     */
    public function setAlternativePricing(?bool $alternativePricing): self
    {
        $this->alternativePricing = $alternativePricing;

        return $this;
    }

    /**
     * Used to instruct the system to create an FP line for future ticketing.
     *
     * @return bool|null
     */
    public function getFutureTicket(): ?bool
    {
        return $this->futureTicket;
    }

    /**
     * Used to instruct the system to create an FP line for future ticketing.
     *
     * @param bool|null $futureTicket
     *
     * @return self
     */
    public function setFutureTicket(?bool $futureTicket): self
    {
        $this->futureTicket = $futureTicket;

        return $this;
    }

    /**
     * This attribute is not used.
     *
     * @return bool|null
     */
    public function getManual(): ?bool
    {
        return $this->manual;
    }

    /**
     * This attribute is not used.
     *
     * @param bool|null $manual
     *
     * @return self
     */
    public function setManual(?bool $manual): self
    {
        $this->manual = $manual;

        return $this;
    }

    /**
     * Used to instruct the system to retain the pricing response and create a price quote record.
     *
     * @return bool|null
     */
    public function getRetain(): ?bool
    {
        return $this->retain;
    }

    /**
     * Used to instruct the system to retain the pricing response and create a price quote record.
     *
     * @param bool|null $retain
     *
     * @return self
     */
    public function setRetain(?bool $retain): self
    {
        $this->retain = $retain;

        return $this;
    }
}
