<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\SeatMap\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class SeatMapRequestEnhancedSeatMapRQNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\SeatMap\\Model\\SeatMapRequestEnhancedSeatMapRQ';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Ammonkc\SabreApi\Model\SeatMap\Model\SeatMapRequestEnhancedSeatMapRQ;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\SeatMap\Model\SeatMapRequestEnhancedSeatMapRQ();
        if (property_exists($data, 'version')) {
            $object->setVersion($data->{'version'});
        }
        if (property_exists($data, 'PriceQuoteCriteria')) {
            $object->setPriceQuoteCriteria($data->{'PriceQuoteCriteria'});
        }
        if (property_exists($data, 'ExtensionPoint')) {
            $object->setExtensionPoint($data->{'ExtensionPoint'});
        }
        if (property_exists($data, 'SeatMapQueryEnhanced')) {
            $object->setSeatMapQueryEnhanced($this->denormalizer->denormalize($data->{'SeatMapQueryEnhanced'}, 'Ammonkc\\SabreApi\\Model\\SeatMap\\Model\\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhanced', 'json', $context));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getVersion()) {
            $data->{'version'} = $object->getVersion();
        }
        if (null !== $object->getPriceQuoteCriteria()) {
            $data->{'PriceQuoteCriteria'} = $object->getPriceQuoteCriteria();
        }
        if (null !== $object->getExtensionPoint()) {
            $data->{'ExtensionPoint'} = $object->getExtensionPoint();
        }
        if (null !== $object->getSeatMapQueryEnhanced()) {
            $data->{'SeatMapQueryEnhanced'} = $this->normalizer->normalize($object->getSeatMapQueryEnhanced(), 'json', $context);
        }

        return $data;
    }
}
