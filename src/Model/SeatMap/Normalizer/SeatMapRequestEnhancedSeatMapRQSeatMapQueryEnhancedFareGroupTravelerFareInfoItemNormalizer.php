<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\SeatMap\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareGroupTravelerFareInfoItemNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\SeatMap\\Model\\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareGroupTravelerFareInfoItem';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Ammonkc\SabreApi\Model\SeatMap\Model\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareGroupTravelerFareInfoItem;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\SeatMap\Model\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareGroupTravelerFareInfoItem();
        if (property_exists($data, 'TypeCount')) {
            $object->setTypeCount($data->{'TypeCount'});
        }
        if (property_exists($data, 'TypeRequested')) {
            $object->setTypeRequested($data->{'TypeRequested'});
        }
        if (property_exists($data, 'TypePriced')) {
            $object->setTypePriced($data->{'TypePriced'});
        }
        if (property_exists($data, 'TicketByDate')) {
            $object->setTicketByDate($data->{'TicketByDate'});
        }
        if (property_exists($data, 'ValidatingCarrier')) {
            $object->setValidatingCarrier($data->{'ValidatingCarrier'});
        }
        if (property_exists($data, 'ExtensionPoint_Summary')) {
            $object->setExtensionPointSummary($data->{'ExtensionPoint_Summary'});
        }
        if (property_exists($data, 'TypeTotalPrice')) {
            $object->setTypeTotalPrice($this->denormalizer->denormalize($data->{'TypeTotalPrice'}, 'Ammonkc\\SabreApi\\Model\\SeatMap\\Model\\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareGroupTravelerFareInfoItemTypeTotalPrice', 'json', $context));
        }
        if (property_exists($data, 'Base')) {
            $object->setBase($this->denormalizer->denormalize($data->{'Base'}, 'Ammonkc\\SabreApi\\Model\\SeatMap\\Model\\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareGroupTravelerFareInfoItemBase', 'json', $context));
        }
        if (property_exists($data, 'Taxes')) {
            $object->setTaxes($this->denormalizer->denormalize($data->{'Taxes'}, 'Ammonkc\\SabreApi\\Model\\SeatMap\\Model\\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareGroupTravelerFareInfoItemTaxes', 'json', $context));
        }
        if (property_exists($data, 'Total')) {
            $object->setTotal($this->denormalizer->denormalize($data->{'Total'}, 'Ammonkc\\SabreApi\\Model\\SeatMap\\Model\\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareGroupTravelerFareInfoItemTotal', 'json', $context));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getTypeCount()) {
            $data->{'TypeCount'} = $object->getTypeCount();
        }
        if (null !== $object->getTypeRequested()) {
            $data->{'TypeRequested'} = $object->getTypeRequested();
        }
        if (null !== $object->getTypePriced()) {
            $data->{'TypePriced'} = $object->getTypePriced();
        }
        if (null !== $object->getTicketByDate()) {
            $data->{'TicketByDate'} = $object->getTicketByDate();
        }
        if (null !== $object->getValidatingCarrier()) {
            $data->{'ValidatingCarrier'} = $object->getValidatingCarrier();
        }
        if (null !== $object->getExtensionPointSummary()) {
            $data->{'ExtensionPoint_Summary'} = $object->getExtensionPointSummary();
        }
        if (null !== $object->getTypeTotalPrice()) {
            $data->{'TypeTotalPrice'} = $this->normalizer->normalize($object->getTypeTotalPrice(), 'json', $context);
        }
        if (null !== $object->getBase()) {
            $data->{'Base'} = $this->normalizer->normalize($object->getBase(), 'json', $context);
        }
        if (null !== $object->getTaxes()) {
            $data->{'Taxes'} = $this->normalizer->normalize($object->getTaxes(), 'json', $context);
        }
        if (null !== $object->getTotal()) {
            $data->{'Total'} = $this->normalizer->normalize($object->getTotal(), 'json', $context);
        }

        return $data;
    }
}
