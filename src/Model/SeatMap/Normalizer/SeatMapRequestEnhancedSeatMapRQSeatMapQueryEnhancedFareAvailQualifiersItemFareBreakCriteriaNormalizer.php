<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\SeatMap\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareAvailQualifiersItemFareBreakCriteriaNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\SeatMap\\Model\\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareAvailQualifiersItemFareBreakCriteria';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Ammonkc\SabreApi\Model\SeatMap\Model\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareAvailQualifiersItemFareBreakCriteria;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\SeatMap\Model\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareAvailQualifiersItemFareBreakCriteria();
        if (property_exists($data, 'vendorCode')) {
            $object->setVendorCode($data->{'vendorCode'});
        }
        if (property_exists($data, 'fareAmount')) {
            $object->setFareAmount($data->{'fareAmount'});
        }
        if (property_exists($data, 'atpcoFareRule')) {
            $object->setAtpcoFareRule($data->{'atpcoFareRule'});
        }
        if (property_exists($data, 'PrivateTariffIndicatorInd')) {
            $object->setPrivateTariffIndicatorInd($data->{'PrivateTariffIndicatorInd'});
        }
        if (property_exists($data, 'governingCarrier')) {
            $object->setGoverningCarrier($data->{'governingCarrier'});
        }
        if (property_exists($data, 'fareTypeBitmap')) {
            $object->setFareTypeBitmap($data->{'fareTypeBitmap'});
        }
        if (property_exists($data, 'fareType')) {
            $object->setFareType($data->{'fareType'});
        }
        if (property_exists($data, 'FareIndicator')) {
            $object->setFareIndicator($data->{'FareIndicator'});
        }
        if (property_exists($data, 'fareComponentID')) {
            $object->setFareComponentID($data->{'fareComponentID'});
        }
        if (property_exists($data, 'atpcoFareTariff')) {
            $object->setAtpcoFareTariff($data->{'atpcoFareTariff'});
        }
        if (property_exists($data, 'ExtensionPoint_Summary')) {
            $object->setExtensionPointSummary($data->{'ExtensionPoint_Summary'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getVendorCode()) {
            $data->{'vendorCode'} = $object->getVendorCode();
        }
        if (null !== $object->getFareAmount()) {
            $data->{'fareAmount'} = $object->getFareAmount();
        }
        if (null !== $object->getAtpcoFareRule()) {
            $data->{'atpcoFareRule'} = $object->getAtpcoFareRule();
        }
        if (null !== $object->getPrivateTariffIndicatorInd()) {
            $data->{'PrivateTariffIndicatorInd'} = $object->getPrivateTariffIndicatorInd();
        }
        if (null !== $object->getGoverningCarrier()) {
            $data->{'governingCarrier'} = $object->getGoverningCarrier();
        }
        if (null !== $object->getFareTypeBitmap()) {
            $data->{'fareTypeBitmap'} = $object->getFareTypeBitmap();
        }
        if (null !== $object->getFareType()) {
            $data->{'fareType'} = $object->getFareType();
        }
        if (null !== $object->getFareIndicator()) {
            $data->{'FareIndicator'} = $object->getFareIndicator();
        }
        if (null !== $object->getFareComponentID()) {
            $data->{'fareComponentID'} = $object->getFareComponentID();
        }
        if (null !== $object->getAtpcoFareTariff()) {
            $data->{'atpcoFareTariff'} = $object->getAtpcoFareTariff();
        }
        if (null !== $object->getExtensionPointSummary()) {
            $data->{'ExtensionPoint_Summary'} = $object->getExtensionPointSummary();
        }

        return $data;
    }
}
