<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\SeatMap\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFlightNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\SeatMap\\Model\\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFlight';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Ammonkc\SabreApi\Model\SeatMap\Model\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFlight;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\SeatMap\Model\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFlight();
        if (property_exists($data, 'AircraftConfigNumber')) {
            $object->setAircraftConfigNumber($data->{'AircraftConfigNumber'});
        }
        if (property_exists($data, 'Status')) {
            $object->setStatus($data->{'Status'});
        }
        if (property_exists($data, 'ExtensionPoint_Summary')) {
            $object->setExtensionPointSummary($data->{'ExtensionPoint_Summary'});
        }
        if (property_exists($data, 'destination')) {
            $object->setDestination($data->{'destination'});
        }
        if (property_exists($data, 'origin')) {
            $object->setOrigin($data->{'origin'});
        }
        if (property_exists($data, 'DepartureDate')) {
            $object->setDepartureDate($this->denormalizer->denormalize($data->{'DepartureDate'}, 'Ammonkc\\SabreApi\\Model\\SeatMap\\Model\\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFlightDepartureDate', 'json', $context));
        }
        if (property_exists($data, 'Operating')) {
            $object->setOperating($this->denormalizer->denormalize($data->{'Operating'}, 'Ammonkc\\SabreApi\\Model\\SeatMap\\Model\\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFlightOperating', 'json', $context));
        }
        if (property_exists($data, 'ArrivalDate')) {
            $object->setArrivalDate($this->denormalizer->denormalize($data->{'ArrivalDate'}, 'Ammonkc\\SabreApi\\Model\\SeatMap\\Model\\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFlightArrivalDate', 'json', $context));
        }
        if (property_exists($data, 'Marketing')) {
            $values = [];
            foreach ($data->{'Marketing'} as $value) {
                $values[] = $this->denormalizer->denormalize($value, 'Ammonkc\\SabreApi\\Model\\SeatMap\\Model\\SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFlightMarketingItem', 'json', $context);
            }
            $object->setMarketing($values);
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAircraftConfigNumber()) {
            $data->{'AircraftConfigNumber'} = $object->getAircraftConfigNumber();
        }
        if (null !== $object->getStatus()) {
            $data->{'Status'} = $object->getStatus();
        }
        if (null !== $object->getExtensionPointSummary()) {
            $data->{'ExtensionPoint_Summary'} = $object->getExtensionPointSummary();
        }
        if (null !== $object->getDestination()) {
            $data->{'destination'} = $object->getDestination();
        }
        if (null !== $object->getOrigin()) {
            $data->{'origin'} = $object->getOrigin();
        }
        if (null !== $object->getDepartureDate()) {
            $data->{'DepartureDate'} = $this->normalizer->normalize($object->getDepartureDate(), 'json', $context);
        }
        if (null !== $object->getOperating()) {
            $data->{'Operating'} = $this->normalizer->normalize($object->getOperating(), 'json', $context);
        }
        if (null !== $object->getArrivalDate()) {
            $data->{'ArrivalDate'} = $this->normalizer->normalize($object->getArrivalDate(), 'json', $context);
        }
        if (null !== $object->getMarketing()) {
            $values = [];
            foreach ($object->getMarketing() as $value) {
                $values[] = $this->normalizer->normalize($value, 'json', $context);
            }
            $data->{'Marketing'} = $values;
        }

        return $data;
    }
}
