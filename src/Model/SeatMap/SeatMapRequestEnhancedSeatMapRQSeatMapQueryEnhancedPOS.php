<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\SeatMap\Model;

class SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedPOS
{
    /**
     * An authority code assigned to a requestor.
     *
     * @var string
     */
    protected $duty;
    /**
     * LNIATA of the Console the agent signed into.
     *
     * @var string
     */
    protected $lNIATA;
    /**
     * The IATA assigned code for the Agency or Airine or GDS.
     *
     * @var string
     */
    protected $company;
    /**
     * Airline partition for multi-host source locations.
     *
     * @var string
     */
    protected $multiHost;
    /**
     * Identifies the agent or party within the requesting entity.
     *
     * @var string
     */
    protected $sine;
    /**
     * Psuedo is either Agency PCC or Agent AAA. Required for most source code is provided.
     *
     * @var string
     */
    protected $pCC;
    /**
     * Actual is where the transaction is initiated.
     *
     * @var string
     */
    protected $actual;
    /**
     * Home is assigned to the agent account.
     *
     * @var string
     */
    protected $home;
    /**
     * Client Context.
     *
     * @var string
     */
    protected $clientContext;

    /**
     * An authority code assigned to a requestor.
     *
     * @return string
     */
    public function getDuty(): ?string
    {
        return $this->duty;
    }

    /**
     * An authority code assigned to a requestor.
     *
     * @param string $duty
     *
     * @return self
     */
    public function setDuty(?string $duty): self
    {
        $this->duty = $duty;

        return $this;
    }

    /**
     * LNIATA of the Console the agent signed into.
     *
     * @return string
     */
    public function getLNIATA(): ?string
    {
        return $this->lNIATA;
    }

    /**
     * LNIATA of the Console the agent signed into.
     *
     * @param string $lNIATA
     *
     * @return self
     */
    public function setLNIATA(?string $lNIATA): self
    {
        $this->lNIATA = $lNIATA;

        return $this;
    }

    /**
     * The IATA assigned code for the Agency or Airine or GDS.
     *
     * @return string
     */
    public function getCompany(): ?string
    {
        return $this->company;
    }

    /**
     * The IATA assigned code for the Agency or Airine or GDS.
     *
     * @param string $company
     *
     * @return self
     */
    public function setCompany(?string $company): self
    {
        $this->company = $company;

        return $this;
    }

    /**
     * Airline partition for multi-host source locations.
     *
     * @return string
     */
    public function getMultiHost(): ?string
    {
        return $this->multiHost;
    }

    /**
     * Airline partition for multi-host source locations.
     *
     * @param string $multiHost
     *
     * @return self
     */
    public function setMultiHost(?string $multiHost): self
    {
        $this->multiHost = $multiHost;

        return $this;
    }

    /**
     * Identifies the agent or party within the requesting entity.
     *
     * @return string
     */
    public function getSine(): ?string
    {
        return $this->sine;
    }

    /**
     * Identifies the agent or party within the requesting entity.
     *
     * @param string $sine
     *
     * @return self
     */
    public function setSine(?string $sine): self
    {
        $this->sine = $sine;

        return $this;
    }

    /**
     * Psuedo is either Agency PCC or Agent AAA. Required for most source code is provided.
     *
     * @return string
     */
    public function getPCC(): ?string
    {
        return $this->pCC;
    }

    /**
     * Psuedo is either Agency PCC or Agent AAA. Required for most source code is provided.
     *
     * @param string $pCC
     *
     * @return self
     */
    public function setPCC(?string $pCC): self
    {
        $this->pCC = $pCC;

        return $this;
    }

    /**
     * Actual is where the transaction is initiated.
     *
     * @return string
     */
    public function getActual(): ?string
    {
        return $this->actual;
    }

    /**
     * Actual is where the transaction is initiated.
     *
     * @param string $actual
     *
     * @return self
     */
    public function setActual(?string $actual): self
    {
        $this->actual = $actual;

        return $this;
    }

    /**
     * Home is assigned to the agent account.
     *
     * @return string
     */
    public function getHome(): ?string
    {
        return $this->home;
    }

    /**
     * Home is assigned to the agent account.
     *
     * @param string $home
     *
     * @return self
     */
    public function setHome(?string $home): self
    {
        $this->home = $home;

        return $this;
    }

    /**
     * Client Context.
     *
     * @return string
     */
    public function getClientContext(): ?string
    {
        return $this->clientContext;
    }

    /**
     * Client Context.
     *
     * @param string $clientContext
     *
     * @return self
     */
    public function setClientContext(?string $clientContext): self
    {
        $this->clientContext = $clientContext;

        return $this;
    }
}
