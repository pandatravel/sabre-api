<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\SeatMap\Model;

class SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhanced
{
    /**
     * Airline Record Locator of passenger or group.
     *
     * @var mixed
     */
    protected $airlineRecordLocator;
    /**
     * Seat Map type to retrieve: PRS (default) or ACS.
     *
     * @var mixed
     */
    protected $seatMapSource;
    /**
     * client issuing the request.
     *
     * @var mixed
     */
    protected $client;
    /**
     * @var mixed
     */
    protected $extensionPointQuery;
    /**
     * An ID for end-to-end correlation of log messages with the corresponding Web service message throughout the processing of the Web service message.
     *
     * @var string
     */
    protected $correlationID;
    /**
     * Type of request Stateful, Stateless, Payload.
     *
     * @var string
     */
    protected $requestType;
    /**
     * currency request for seatmap pricing.
     *
     * @var string
     */
    protected $currency;
    /**
     * @var SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedCabinDefinition
     */
    protected $cabinDefinition;
    /**
     * @var SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedPOS
     */
    protected $pOS;
    /**
     * @var SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFlight
     */
    protected $flight;
    /**
     * @var SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareGroup
     */
    protected $fareGroup;
    /**
     * @var SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareAvailQualifiersItem[]
     */
    protected $fareAvailQualifiers;
    /**
     * @var SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedJourneyData
     */
    protected $journeyData;

    /**
     * Airline Record Locator of passenger or group.
     *
     * @return mixed
     */
    public function getAirlineRecordLocator()
    {
        return $this->airlineRecordLocator;
    }

    /**
     * Airline Record Locator of passenger or group.
     *
     * @param mixed $airlineRecordLocator
     *
     * @return self
     */
    public function setAirlineRecordLocator($airlineRecordLocator): self
    {
        $this->airlineRecordLocator = $airlineRecordLocator;

        return $this;
    }

    /**
     * Seat Map type to retrieve: PRS (default) or ACS.
     *
     * @return mixed
     */
    public function getSeatMapSource()
    {
        return $this->seatMapSource;
    }

    /**
     * Seat Map type to retrieve: PRS (default) or ACS.
     *
     * @param mixed $seatMapSource
     *
     * @return self
     */
    public function setSeatMapSource($seatMapSource): self
    {
        $this->seatMapSource = $seatMapSource;

        return $this;
    }

    /**
     * client issuing the request.
     *
     * @return mixed
     */
    public function getClient()
    {
        return $this->client;
    }

    /**
     * client issuing the request.
     *
     * @param mixed $client
     *
     * @return self
     */
    public function setClient($client): self
    {
        $this->client = $client;

        return $this;
    }

    /**
     * @return mixed
     */
    public function getExtensionPointQuery()
    {
        return $this->extensionPointQuery;
    }

    /**
     * @param mixed $extensionPointQuery
     *
     * @return self
     */
    public function setExtensionPointQuery($extensionPointQuery): self
    {
        $this->extensionPointQuery = $extensionPointQuery;

        return $this;
    }

    /**
     * An ID for end-to-end correlation of log messages with the corresponding Web service message throughout the processing of the Web service message.
     *
     * @return string
     */
    public function getCorrelationID(): ?string
    {
        return $this->correlationID;
    }

    /**
     * An ID for end-to-end correlation of log messages with the corresponding Web service message throughout the processing of the Web service message.
     *
     * @param string $correlationID
     *
     * @return self
     */
    public function setCorrelationID(?string $correlationID): self
    {
        $this->correlationID = $correlationID;

        return $this;
    }

    /**
     * Type of request Stateful, Stateless, Payload.
     *
     * @return string
     */
    public function getRequestType(): ?string
    {
        return $this->requestType;
    }

    /**
     * Type of request Stateful, Stateless, Payload.
     *
     * @param string $requestType
     *
     * @return self
     */
    public function setRequestType(?string $requestType): self
    {
        $this->requestType = $requestType;

        return $this;
    }

    /**
     * currency request for seatmap pricing.
     *
     * @return string
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * currency request for seatmap pricing.
     *
     * @param string $currency
     *
     * @return self
     */
    public function setCurrency(?string $currency): self
    {
        $this->currency = $currency;

        return $this;
    }

    /**
     * @return SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedCabinDefinition
     */
    public function getCabinDefinition(): ?SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedCabinDefinition
    {
        return $this->cabinDefinition;
    }

    /**
     * @param SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedCabinDefinition $cabinDefinition
     *
     * @return self
     */
    public function setCabinDefinition(?SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedCabinDefinition $cabinDefinition): self
    {
        $this->cabinDefinition = $cabinDefinition;

        return $this;
    }

    /**
     * @return SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedPOS
     */
    public function getPOS(): ?SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedPOS
    {
        return $this->pOS;
    }

    /**
     * @param SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedPOS $pOS
     *
     * @return self
     */
    public function setPOS(?SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedPOS $pOS): self
    {
        $this->pOS = $pOS;

        return $this;
    }

    /**
     * @return SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFlight
     */
    public function getFlight(): ?SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFlight
    {
        return $this->flight;
    }

    /**
     * @param SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFlight $flight
     *
     * @return self
     */
    public function setFlight(?SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFlight $flight): self
    {
        $this->flight = $flight;

        return $this;
    }

    /**
     * @return SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareGroup
     */
    public function getFareGroup(): ?SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareGroup
    {
        return $this->fareGroup;
    }

    /**
     * @param SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareGroup $fareGroup
     *
     * @return self
     */
    public function setFareGroup(?SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareGroup $fareGroup): self
    {
        $this->fareGroup = $fareGroup;

        return $this;
    }

    /**
     * @return SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareAvailQualifiersItem[]
     */
    public function getFareAvailQualifiers(): ?array
    {
        return $this->fareAvailQualifiers;
    }

    /**
     * @param SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedFareAvailQualifiersItem[] $fareAvailQualifiers
     *
     * @return self
     */
    public function setFareAvailQualifiers(?array $fareAvailQualifiers): self
    {
        $this->fareAvailQualifiers = $fareAvailQualifiers;

        return $this;
    }

    /**
     * @return SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedJourneyData
     */
    public function getJourneyData(): ?SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedJourneyData
    {
        return $this->journeyData;
    }

    /**
     * @param SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedJourneyData $journeyData
     *
     * @return self
     */
    public function setJourneyData(?SeatMapRequestEnhancedSeatMapRQSeatMapQueryEnhancedJourneyData $journeyData): self
    {
        $this->journeyData = $journeyData;

        return $this;
    }
}
