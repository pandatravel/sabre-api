<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\InstaFlightsSearch\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class AirItineraryPricingInfoPTCFareBreakdownsPTCFareBreakdownFareBasisCodesFareBasisCodeItemNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\InstaFlightsSearch\\AirItineraryPricingInfoPTCFareBreakdownsPTCFareBreakdownFareBasisCodesFareBasisCodeItem';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Ammonkc\SabreApi\Model\InstaFlightsSearch\AirItineraryPricingInfoPTCFareBreakdownsPTCFareBreakdownFareBasisCodesFareBasisCodeItem;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\InstaFlightsSearch\AirItineraryPricingInfoPTCFareBreakdownsPTCFareBreakdownFareBasisCodesFareBasisCodeItem();
        if (property_exists($data, 'BookingCode')) {
            $object->setBookingCode($data->{'BookingCode'});
        }
        if (property_exists($data, 'DepartureAirportCode')) {
            $object->setDepartureAirportCode($data->{'DepartureAirportCode'});
        }
        if (property_exists($data, 'AvailabilityBreak')) {
            $object->setAvailabilityBreak($data->{'AvailabilityBreak'});
        }
        if (property_exists($data, 'ArrivalAirportCode')) {
            $object->setArrivalAirportCode($data->{'ArrivalAirportCode'});
        }
        if (property_exists($data, 'content')) {
            $object->setContent($data->{'content'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getBookingCode()) {
            $data->{'BookingCode'} = $object->getBookingCode();
        }
        if (null !== $object->getDepartureAirportCode()) {
            $data->{'DepartureAirportCode'} = $object->getDepartureAirportCode();
        }
        if (null !== $object->getAvailabilityBreak()) {
            $data->{'AvailabilityBreak'} = $object->getAvailabilityBreak();
        }
        if (null !== $object->getArrivalAirportCode()) {
            $data->{'ArrivalAirportCode'} = $object->getArrivalAirportCode();
        }
        if (null !== $object->getContent()) {
            $data->{'content'} = $object->getContent();
        }

        return $data;
    }
}
