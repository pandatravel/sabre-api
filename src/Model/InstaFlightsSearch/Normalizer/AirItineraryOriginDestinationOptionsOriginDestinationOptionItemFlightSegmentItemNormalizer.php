<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\InstaFlightsSearch\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItemNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\InstaFlightsSearch\\AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItem';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Ammonkc\SabreApi\Model\InstaFlightsSearch\AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItem;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\InstaFlightsSearch\AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItem();
        if (property_exists($data, 'StopQuantity')) {
            $object->setStopQuantity($data->{'StopQuantity'});
        }
        if (property_exists($data, 'StopAirports')) {
            $object->setStopAirports($this->denormalizer->denormalize($data->{'StopAirports'}, 'Ammonkc\\SabreApi\\Model\\InstaFlightsSearch\\AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItemStopAirports', 'json', $context));
        }
        if (property_exists($data, 'DisclosureAirline')) {
            $object->setDisclosureAirline($this->denormalizer->denormalize($data->{'DisclosureAirline'}, 'Ammonkc\\SabreApi\\Model\\InstaFlightsSearch\\AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItemDisclosureAirline', 'json', $context));
        }
        if (property_exists($data, 'ElapsedTime')) {
            $object->setElapsedTime($data->{'ElapsedTime'});
        }
        if (property_exists($data, 'ResBookDesigCode')) {
            $object->setResBookDesigCode($data->{'ResBookDesigCode'});
        }
        if (property_exists($data, 'DepartureDateTime')) {
            $object->setDepartureDateTime($data->{'DepartureDateTime'});
        }
        if (property_exists($data, 'ArrivalDateTime')) {
            $object->setArrivalDateTime($data->{'ArrivalDateTime'});
        }
        if (property_exists($data, 'FlightNumber')) {
            $object->setFlightNumber($data->{'FlightNumber'});
        }
        if (property_exists($data, 'MarriageGrp')) {
            $object->setMarriageGrp($data->{'MarriageGrp'});
        }
        if (property_exists($data, 'DepartureAirport')) {
            $object->setDepartureAirport($this->denormalizer->denormalize($data->{'DepartureAirport'}, 'Ammonkc\\SabreApi\\Model\\InstaFlightsSearch\\AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItemDepartureAirport', 'json', $context));
        }
        if (property_exists($data, 'ArrivalAirport')) {
            $object->setArrivalAirport($this->denormalizer->denormalize($data->{'ArrivalAirport'}, 'Ammonkc\\SabreApi\\Model\\InstaFlightsSearch\\AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItemArrivalAirport', 'json', $context));
        }
        if (property_exists($data, 'MarketingAirline')) {
            $object->setMarketingAirline($this->denormalizer->denormalize($data->{'MarketingAirline'}, 'Ammonkc\\SabreApi\\Model\\InstaFlightsSearch\\AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItemMarketingAirline', 'json', $context));
        }
        if (property_exists($data, 'ArrivalTimeZone')) {
            $object->setArrivalTimeZone($this->denormalizer->denormalize($data->{'ArrivalTimeZone'}, 'Ammonkc\\SabreApi\\Model\\InstaFlightsSearch\\AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItemArrivalTimeZone', 'json', $context));
        }
        if (property_exists($data, 'Equipment')) {
            $object->setEquipment($this->denormalizer->denormalize($data->{'Equipment'}, 'Ammonkc\\SabreApi\\Model\\InstaFlightsSearch\\AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItemEquipment', 'json', $context));
        }
        if (property_exists($data, 'OnTimePerformance')) {
            $object->setOnTimePerformance($this->denormalizer->denormalize($data->{'OnTimePerformance'}, 'Ammonkc\\SabreApi\\Model\\InstaFlightsSearch\\AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItemOnTimePerformance', 'json', $context));
        }
        if (property_exists($data, 'OperatingAirline')) {
            $object->setOperatingAirline($this->denormalizer->denormalize($data->{'OperatingAirline'}, 'Ammonkc\\SabreApi\\Model\\InstaFlightsSearch\\AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItemOperatingAirline', 'json', $context));
        }
        if (property_exists($data, 'DepartureTimeZone')) {
            $object->setDepartureTimeZone($this->denormalizer->denormalize($data->{'DepartureTimeZone'}, 'Ammonkc\\SabreApi\\Model\\InstaFlightsSearch\\AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItemDepartureTimeZone', 'json', $context));
        }
        if (property_exists($data, 'TPA_Extensions')) {
            $object->setTPAExtensions($this->denormalizer->denormalize($data->{'TPA_Extensions'}, 'Ammonkc\\SabreApi\\Model\\InstaFlightsSearch\\AirItineraryOriginDestinationOptionsOriginDestinationOptionItemFlightSegmentItemTPAExtensions', 'json', $context));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getStopQuantity()) {
            $data->{'StopQuantity'} = $object->getStopQuantity();
        }
        if (null !== $object->getStopAirports()) {
            $data->{'StopAirports'} = $this->normalizer->normalize($object->getStopAirports(), 'json', $context);
        }
        if (null !== $object->getDisclosureAirline()) {
            $data->{'DisclosureAirline'} = $this->normalizer->normalize($object->getDisclosureAirline(), 'json', $context);
        }
        if (null !== $object->getElapsedTime()) {
            $data->{'ElapsedTime'} = $object->getElapsedTime();
        }
        if (null !== $object->getResBookDesigCode()) {
            $data->{'ResBookDesigCode'} = $object->getResBookDesigCode();
        }
        if (null !== $object->getDepartureDateTime()) {
            $data->{'DepartureDateTime'} = $object->getDepartureDateTime();
        }
        if (null !== $object->getArrivalDateTime()) {
            $data->{'ArrivalDateTime'} = $object->getArrivalDateTime();
        }
        if (null !== $object->getFlightNumber()) {
            $data->{'FlightNumber'} = $object->getFlightNumber();
        }
        if (null !== $object->getMarriageGrp()) {
            $data->{'MarriageGrp'} = $object->getMarriageGrp();
        }
        if (null !== $object->getDepartureAirport()) {
            $data->{'DepartureAirport'} = $this->normalizer->normalize($object->getDepartureAirport(), 'json', $context);
        }
        if (null !== $object->getArrivalAirport()) {
            $data->{'ArrivalAirport'} = $this->normalizer->normalize($object->getArrivalAirport(), 'json', $context);
        }
        if (null !== $object->getMarketingAirline()) {
            $data->{'MarketingAirline'} = $this->normalizer->normalize($object->getMarketingAirline(), 'json', $context);
        }
        if (null !== $object->getArrivalTimeZone()) {
            $data->{'ArrivalTimeZone'} = $this->normalizer->normalize($object->getArrivalTimeZone(), 'json', $context);
        }
        if (null !== $object->getEquipment()) {
            $data->{'Equipment'} = $this->normalizer->normalize($object->getEquipment(), 'json', $context);
        }
        if (null !== $object->getOnTimePerformance()) {
            $data->{'OnTimePerformance'} = $this->normalizer->normalize($object->getOnTimePerformance(), 'json', $context);
        }
        if (null !== $object->getOperatingAirline()) {
            $data->{'OperatingAirline'} = $this->normalizer->normalize($object->getOperatingAirline(), 'json', $context);
        }
        if (null !== $object->getDepartureTimeZone()) {
            $data->{'DepartureTimeZone'} = $this->normalizer->normalize($object->getDepartureTimeZone(), 'json', $context);
        }
        if (null !== $object->getTPAExtensions()) {
            $data->{'TPA_Extensions'} = $this->normalizer->normalize($object->getTPAExtensions(), 'json', $context);
        }

        return $data;
    }
}
