<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\BargainFinderMax\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class OrgOpentravelOta200305DocumentTypeNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305DocumentType';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305DocumentType';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Ammonkc\SabreApi\Model\BargainFinderMax\OrgOpentravelOta200305DocumentType();
        if (property_exists($data, 'BirthDate') && $data->{'BirthDate'} !== null) {
            $object->setBirthDate($data->{'BirthDate'});
        }
        if (property_exists($data, 'DocHolderName') && $data->{'DocHolderName'} !== null) {
            $object->setDocHolderName($data->{'DocHolderName'});
        }
        if (property_exists($data, 'DocID') && $data->{'DocID'} !== null) {
            $object->setDocID($data->{'DocID'});
        }
        if (property_exists($data, 'DocIssueAuthority') && $data->{'DocIssueAuthority'} !== null) {
            $object->setDocIssueAuthority($data->{'DocIssueAuthority'});
        }
        if (property_exists($data, 'DocIssueLocation') && $data->{'DocIssueLocation'} !== null) {
            $object->setDocIssueLocation($data->{'DocIssueLocation'});
        }
        if (property_exists($data, 'DocLimitations') && $data->{'DocLimitations'} !== null) {
            $values = [];
            foreach ($data->{'DocLimitations'} as $value) {
                $values[] = $value;
            }
            $object->setDocLimitations($values);
        }
        if (property_exists($data, 'DocType') && $data->{'DocType'} !== null) {
            $object->setDocType($data->{'DocType'});
        }
        if (property_exists($data, 'EffectiveDate') && $data->{'EffectiveDate'} !== null) {
            $object->setEffectiveDate($data->{'EffectiveDate'});
        }
        if (property_exists($data, 'ExpireDate') && $data->{'ExpireDate'} !== null) {
            $object->setExpireDate($data->{'ExpireDate'});
        }
        if (property_exists($data, 'Gender') && $data->{'Gender'} !== null) {
            $object->setGender($data->{'Gender'});
        }
        if (property_exists($data, 'ShareMarketInd') && $data->{'ShareMarketInd'} !== null) {
            $object->setShareMarketInd($data->{'ShareMarketInd'});
        }
        if (property_exists($data, 'ShareSynchInd') && $data->{'ShareSynchInd'} !== null) {
            $object->setShareSynchInd($data->{'ShareSynchInd'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getBirthDate()) {
            $data->{'BirthDate'} = $object->getBirthDate();
        }
        if (null !== $object->getDocHolderName()) {
            $data->{'DocHolderName'} = $object->getDocHolderName();
        }
        if (null !== $object->getDocID()) {
            $data->{'DocID'} = $object->getDocID();
        }
        if (null !== $object->getDocIssueAuthority()) {
            $data->{'DocIssueAuthority'} = $object->getDocIssueAuthority();
        }
        if (null !== $object->getDocIssueLocation()) {
            $data->{'DocIssueLocation'} = $object->getDocIssueLocation();
        }
        if (null !== $object->getDocLimitations()) {
            $values = [];
            foreach ($object->getDocLimitations() as $value) {
                $values[] = $value;
            }
            $data->{'DocLimitations'} = $values;
        }
        if (null !== $object->getDocType()) {
            $data->{'DocType'} = $object->getDocType();
        }
        if (null !== $object->getEffectiveDate()) {
            $data->{'EffectiveDate'} = $object->getEffectiveDate();
        }
        if (null !== $object->getExpireDate()) {
            $data->{'ExpireDate'} = $object->getExpireDate();
        }
        if (null !== $object->getGender()) {
            $data->{'Gender'} = $object->getGender();
        }
        if (null !== $object->getShareMarketInd()) {
            $data->{'ShareMarketInd'} = $object->getShareMarketInd();
        }
        if (null !== $object->getShareSynchInd()) {
            $data->{'ShareSynchInd'} = $object->getShareSynchInd();
        }

        return $data;
    }
}
