<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\BargainFinderMax\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class BargainFinderMaxRequestOTAAirLowFareSearchRQNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\BargainFinderMaxRequestOTAAirLowFareSearchRQ';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\BargainFinderMaxRequestOTAAirLowFareSearchRQ';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Ammonkc\SabreApi\Model\BargainFinderMax\BargainFinderMaxRequestOTAAirLowFareSearchRQ();
        if (property_exists($data, 'AltLangID') && $data->{'AltLangID'} !== null) {
            $object->setAltLangID($data->{'AltLangID'});
        }
        if (property_exists($data, 'AvailableFlightsOnly') && $data->{'AvailableFlightsOnly'} !== null) {
            $object->setAvailableFlightsOnly($data->{'AvailableFlightsOnly'});
        }
        if (property_exists($data, 'DirectFlightsOnly') && $data->{'DirectFlightsOnly'} !== null) {
            $object->setDirectFlightsOnly($data->{'DirectFlightsOnly'});
        }
        if (property_exists($data, 'EchoToken') && $data->{'EchoToken'} !== null) {
            $object->setEchoToken($data->{'EchoToken'});
        }
        if (property_exists($data, 'MaxResponses') && $data->{'MaxResponses'} !== null) {
            $object->setMaxResponses($data->{'MaxResponses'});
        }
        if (property_exists($data, 'OriginDestinationInformation') && $data->{'OriginDestinationInformation'} !== null) {
            $values = [];
            foreach ($data->{'OriginDestinationInformation'} as $value) {
                $values[] = $this->denormalizer->denormalize($value, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305OTAAirLowFareSearchRQOriginDestinationInformation', 'json', $context);
            }
            $object->setOriginDestinationInformation($values);
        }
        if (property_exists($data, 'POS') && $data->{'POS'} !== null) {
            $object->setPOS($this->denormalizer->denormalize($data->{'POS'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305POSType', 'json', $context));
        }
        if (property_exists($data, 'PrimaryLangID') && $data->{'PrimaryLangID'} !== null) {
            $object->setPrimaryLangID($data->{'PrimaryLangID'});
        }
        if (property_exists($data, 'ResponseType') && $data->{'ResponseType'} !== null) {
            $object->setResponseType($data->{'ResponseType'});
        }
        if (property_exists($data, 'ResponseVersion') && $data->{'ResponseVersion'} !== null) {
            $object->setResponseVersion($data->{'ResponseVersion'});
        }
        if (property_exists($data, 'SeparateMessages') && $data->{'SeparateMessages'} !== null) {
            $object->setSeparateMessages($data->{'SeparateMessages'});
        }
        if (property_exists($data, 'SequenceNmbr') && $data->{'SequenceNmbr'} !== null) {
            $object->setSequenceNmbr($data->{'SequenceNmbr'});
        }
        if (property_exists($data, 'TPA_Extensions') && $data->{'TPA_Extensions'} !== null) {
            $object->setTPAExtensions($this->denormalizer->denormalize($data->{'TPA_Extensions'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensions', 'json', $context));
        }
        if (property_exists($data, 'Target') && $data->{'Target'} !== null) {
            $object->setTarget($data->{'Target'});
        }
        if (property_exists($data, 'TimeStamp') && $data->{'TimeStamp'} !== null) {
            $object->setTimeStamp($data->{'TimeStamp'});
        }
        if (property_exists($data, 'TransactionIdentifier') && $data->{'TransactionIdentifier'} !== null) {
            $object->setTransactionIdentifier($data->{'TransactionIdentifier'});
        }
        if (property_exists($data, 'TransactionStatusCode') && $data->{'TransactionStatusCode'} !== null) {
            $object->setTransactionStatusCode($data->{'TransactionStatusCode'});
        }
        if (property_exists($data, 'TravelPreferences') && $data->{'TravelPreferences'} !== null) {
            $object->setTravelPreferences($this->denormalizer->denormalize($data->{'TravelPreferences'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305AirSearchPrefsType', 'json', $context));
        }
        if (property_exists($data, 'TravelerInfoSummary') && $data->{'TravelerInfoSummary'} !== null) {
            $object->setTravelerInfoSummary($this->denormalizer->denormalize($data->{'TravelerInfoSummary'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305TravelerInfoSummaryType', 'json', $context));
        }
        if (property_exists($data, 'TruncateMessages') && $data->{'TruncateMessages'} !== null) {
            $object->setTruncateMessages($data->{'TruncateMessages'});
        }
        if (property_exists($data, 'Version') && $data->{'Version'} !== null) {
            $object->setVersion($data->{'Version'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAltLangID()) {
            $data->{'AltLangID'} = $object->getAltLangID();
        }
        if (null !== $object->getAvailableFlightsOnly()) {
            $data->{'AvailableFlightsOnly'} = $object->getAvailableFlightsOnly();
        }
        if (null !== $object->getDirectFlightsOnly()) {
            $data->{'DirectFlightsOnly'} = $object->getDirectFlightsOnly();
        }
        if (null !== $object->getEchoToken()) {
            $data->{'EchoToken'} = $object->getEchoToken();
        }
        if (null !== $object->getMaxResponses()) {
            $data->{'MaxResponses'} = $object->getMaxResponses();
        }
        if (null !== $object->getOriginDestinationInformation()) {
            $values = [];
            foreach ($object->getOriginDestinationInformation() as $value) {
                $values[] = $this->normalizer->normalize($value, 'json', $context);
            }
            $data->{'OriginDestinationInformation'} = $values;
        }
        if (null !== $object->getPOS()) {
            $data->{'POS'} = $this->normalizer->normalize($object->getPOS(), 'json', $context);
        }
        if (null !== $object->getPrimaryLangID()) {
            $data->{'PrimaryLangID'} = $object->getPrimaryLangID();
        }
        if (null !== $object->getResponseType()) {
            $data->{'ResponseType'} = $object->getResponseType();
        }
        if (null !== $object->getResponseVersion()) {
            $data->{'ResponseVersion'} = $object->getResponseVersion();
        }
        if (null !== $object->getSeparateMessages()) {
            $data->{'SeparateMessages'} = $object->getSeparateMessages();
        }
        if (null !== $object->getSequenceNmbr()) {
            $data->{'SequenceNmbr'} = $object->getSequenceNmbr();
        }
        if (null !== $object->getTPAExtensions()) {
            $data->{'TPA_Extensions'} = $this->normalizer->normalize($object->getTPAExtensions(), 'json', $context);
        }
        if (null !== $object->getTarget()) {
            $data->{'Target'} = $object->getTarget();
        }
        if (null !== $object->getTimeStamp()) {
            $data->{'TimeStamp'} = $object->getTimeStamp();
        }
        if (null !== $object->getTransactionIdentifier()) {
            $data->{'TransactionIdentifier'} = $object->getTransactionIdentifier();
        }
        if (null !== $object->getTransactionStatusCode()) {
            $data->{'TransactionStatusCode'} = $object->getTransactionStatusCode();
        }
        if (null !== $object->getTravelPreferences()) {
            $data->{'TravelPreferences'} = $this->normalizer->normalize($object->getTravelPreferences(), 'json', $context);
        }
        if (null !== $object->getTravelerInfoSummary()) {
            $data->{'TravelerInfoSummary'} = $this->normalizer->normalize($object->getTravelerInfoSummary(), 'json', $context);
        }
        if (null !== $object->getTruncateMessages()) {
            $data->{'TruncateMessages'} = $object->getTruncateMessages();
        }
        if (null !== $object->getVersion()) {
            $data->{'Version'} = $object->getVersion();
        }

        return $data;
    }
}
