<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\BargainFinderMax\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class StatisticsTypeNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\StatisticsType';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\StatisticsType';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Ammonkc\SabreApi\Model\BargainFinderMax\StatisticsType();
        if (property_exists($data, 'branded') && $data->{'branded'} !== null) {
            $object->setBranded($data->{'branded'});
        }
        if (property_exists($data, 'departed') && $data->{'departed'} !== null) {
            $object->setDeparted($data->{'departed'});
        }
        if (property_exists($data, 'itineraryCount') && $data->{'itineraryCount'} !== null) {
            $object->setItineraryCount($data->{'itineraryCount'});
        }
        if (property_exists($data, 'legMissed') && $data->{'legMissed'} !== null) {
            $object->setLegMissed($data->{'legMissed'});
        }
        if (property_exists($data, 'oneWay') && $data->{'oneWay'} !== null) {
            $object->setOneWay($data->{'oneWay'});
        }
        if (property_exists($data, 'soldOut') && $data->{'soldOut'} !== null) {
            $object->setSoldOut($data->{'soldOut'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getBranded()) {
            $data->{'branded'} = $object->getBranded();
        }
        if (null !== $object->getDeparted()) {
            $data->{'departed'} = $object->getDeparted();
        }
        if (null !== $object->getItineraryCount()) {
            $data->{'itineraryCount'} = $object->getItineraryCount();
        }
        if (null !== $object->getLegMissed()) {
            $data->{'legMissed'} = $object->getLegMissed();
        }
        if (null !== $object->getOneWay()) {
            $data->{'oneWay'} = $object->getOneWay();
        }
        if (null !== $object->getSoldOut()) {
            $data->{'soldOut'} = $object->getSoldOut();
        }

        return $data;
    }
}
