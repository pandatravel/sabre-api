<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\BargainFinderMax\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class OrgOpentravelOta200305PassengerTypeQuantityTypeTPAExtensionsNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305PassengerTypeQuantityTypeTPAExtensions';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305PassengerTypeQuantityTypeTPAExtensions';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Ammonkc\SabreApi\Model\BargainFinderMax\OrgOpentravelOta200305PassengerTypeQuantityTypeTPAExtensions();
        if (property_exists($data, 'Age') && $data->{'Age'} !== null) {
            $object->setAge($this->denormalizer->denormalize($data->{'Age'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305PassengerTypeQuantityTypeTPAExtensionsAge', 'json', $context));
        }
        if (property_exists($data, 'BirthDate') && $data->{'BirthDate'} !== null) {
            $object->setBirthDate($this->denormalizer->denormalize($data->{'BirthDate'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305PassengerTypeQuantityTypeTPAExtensionsBirthDate', 'json', $context));
        }
        if (property_exists($data, 'State') && $data->{'State'} !== null) {
            $object->setState($this->denormalizer->denormalize($data->{'State'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305PassengerTypeQuantityTypeTPAExtensionsState', 'json', $context));
        }
        if (property_exists($data, 'TotalNumber') && $data->{'TotalNumber'} !== null) {
            $object->setTotalNumber($this->denormalizer->denormalize($data->{'TotalNumber'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305PassengerTypeQuantityTypeTPAExtensionsTotalNumber', 'json', $context));
        }
        if (property_exists($data, 'VoluntaryChanges') && $data->{'VoluntaryChanges'} !== null) {
            $object->setVoluntaryChanges($this->denormalizer->denormalize($data->{'VoluntaryChanges'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305VoluntaryChangesSMPType', 'json', $context));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAge()) {
            $data->{'Age'} = $this->normalizer->normalize($object->getAge(), 'json', $context);
        }
        if (null !== $object->getBirthDate()) {
            $data->{'BirthDate'} = $this->normalizer->normalize($object->getBirthDate(), 'json', $context);
        }
        if (null !== $object->getState()) {
            $data->{'State'} = $this->normalizer->normalize($object->getState(), 'json', $context);
        }
        if (null !== $object->getTotalNumber()) {
            $data->{'TotalNumber'} = $this->normalizer->normalize($object->getTotalNumber(), 'json', $context);
        }
        if (null !== $object->getVoluntaryChanges()) {
            $data->{'VoluntaryChanges'} = $this->normalizer->normalize($object->getVoluntaryChanges(), 'json', $context);
        }

        return $data;
    }
}
