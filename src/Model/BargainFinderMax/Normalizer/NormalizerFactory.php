<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\BargainFinderMax\Normalizer;

class NormalizerFactory
{
    public static function create()
    {
        $normalizers = [];
        $normalizers[] = new \Symfony\Component\Serializer\Normalizer\ArrayDenormalizer();
        $normalizers[] = new AllowanceNormalizer();
        $normalizers[] = new AncillaryFeeDetailsTypeNormalizer();
        $normalizers[] = new AncillaryFeeGroupTypeNormalizer();
        $normalizers[] = new AncillaryFeeTypeNormalizer();
        $normalizers[] = new ArrivalNormalizer();
        $normalizers[] = new BaggageAllowanceTypeNormalizer();
        $normalizers[] = new BaggageChargeTypeNormalizer();
        $normalizers[] = new BaggageInformationTypeNormalizer();
        $normalizers[] = new BaggageSequenceOrderNormalizer();
        $normalizers[] = new BargainFinderMaxRequestNormalizer();
        $normalizers[] = new BargainFinderMaxRequestOTAAirLowFareSearchRQNormalizer();
        $normalizers[] = new BookingDetailsNormalizer();
        $normalizers[] = new BrandFeatureIDTypeNormalizer();
        $normalizers[] = new BrandFeatureTypeNormalizer();
        $normalizers[] = new BrandTypeNormalizer();
        $normalizers[] = new CacheSourceDescTypeNormalizer();
        $normalizers[] = new CachedNormalizer();
        $normalizers[] = new CarrierNormalizer();
        $normalizers[] = new Cat16TextOnlyNormalizer();
        $normalizers[] = new ChangeFeeTypeNormalizer();
        $normalizers[] = new ChargeNormalizer();
        $normalizers[] = new CountryNormalizer();
        $normalizers[] = new CurrencyConversionTypeNormalizer();
        $normalizers[] = new DepartureNormalizer();
        $normalizers[] = new DiversitySwapperTypeNormalizer();
        $normalizers[] = new EquipmentNormalizer();
        $normalizers[] = new FailedTypeNormalizer();
        $normalizers[] = new FareComponentBreakdownTypeNormalizer();
        $normalizers[] = new FareComponentIDTypeNormalizer();
        $normalizers[] = new FareComponentSegmentsTypeNormalizer();
        $normalizers[] = new FareComponentTypeNormalizer();
        $normalizers[] = new FareMessageTypeNormalizer();
        $normalizers[] = new FareSegmentTypeNormalizer();
        $normalizers[] = new FareTypeNormalizer();
        $normalizers[] = new GroupDescriptionNormalizer();
        $normalizers[] = new GroupedItineraryResponseNormalizer();
        $normalizers[] = new GroupedItineraryResponseGroupedItineraryResponseNormalizer();
        $normalizers[] = new HandlingMarkupDetailTypeNormalizer();
        $normalizers[] = new HandlingMarkupTypeNormalizer();
        $normalizers[] = new HiddenStopTypeNormalizer();
        $normalizers[] = new HigherIntermediatePointTypeNormalizer();
        $normalizers[] = new IETCountryWOBSPNormalizer();
        $normalizers[] = new ItineraryGroupTypeNormalizer();
        $normalizers[] = new ItineraryTypeNormalizer();
        $normalizers[] = new LegDescriptionTypeNormalizer();
        $normalizers[] = new LegIDTypeNormalizer();
        $normalizers[] = new LegTypeNormalizer();
        $normalizers[] = new MessageTypeNormalizer();
        $normalizers[] = new OBFeeIDTypeNormalizer();
        $normalizers[] = new OBFeeTypeNormalizer();
        $normalizers[] = new OfferNormalizer();
        $normalizers[] = new OrderStandardBagNormalizer();
        $normalizers[] = new PassengerBagsNormalizer();
        $normalizers[] = new PassengerInfoListElementTypeNormalizer();
        $normalizers[] = new PassengerInformationTypeNormalizer();
        $normalizers[] = new PassengerNotAvailableInfoTypeNormalizer();
        $normalizers[] = new PassengerTotalFareTypeNormalizer();
        $normalizers[] = new PenaltiesTypeNormalizer();
        $normalizers[] = new PenaltyNormalizer();
        $normalizers[] = new PlusUpInformationTypeNormalizer();
        $normalizers[] = new PricingInformationTypeNormalizer();
        $normalizers[] = new PricingLegTypeNormalizer();
        $normalizers[] = new ProcessingMessageTypeNormalizer();
        $normalizers[] = new ReissueTypeNormalizer();
        $normalizers[] = new ScheduleDescTypeNormalizer();
        $normalizers[] = new ScheduleMessageTypeNormalizer();
        $normalizers[] = new ScheduleTypeNormalizer();
        $normalizers[] = new SegmentNormalizer();
        $normalizers[] = new SegmentTypeNormalizer();
        $normalizers[] = new SegmentsTypeNormalizer();
        $normalizers[] = new SellingFareDataTypeNormalizer();
        $normalizers[] = new SideTripNormalizer();
        $normalizers[] = new SoldOutLegTypeNormalizer();
        $normalizers[] = new SoldOutScheduleNormalizer();
        $normalizers[] = new SoldOutTypeNormalizer();
        $normalizers[] = new StatisticsTypeNormalizer();
        $normalizers[] = new SurchargeTypeNormalizer();
        $normalizers[] = new SurfaceTypeNormalizer();
        $normalizers[] = new TaxIDTypeNormalizer();
        $normalizers[] = new TaxReissueTypeNormalizer();
        $normalizers[] = new TaxRestrictionsTypeNormalizer();
        $normalizers[] = new TaxSummaryIDTypeNormalizer();
        $normalizers[] = new TaxSummaryTypeNormalizer();
        $normalizers[] = new TaxTypeNormalizer();
        $normalizers[] = new TicketTypeNormalizer();
        $normalizers[] = new TotalFareTypeNormalizer();
        $normalizers[] = new ValidatingCarrierNormalizer();
        $normalizers[] = new ValidatingCarrierCommissionInfoTypeNormalizer();
        $normalizers[] = new ValidatingCarrierIDTypeNormalizer();
        $normalizers[] = new ValidatingCarrierTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AddressTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AdvResTicketingTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AdvResTicketingTypeAdvReservationNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AdvResTicketingTypeAdvTicketingNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeAncillaryFeesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeAncillaryFeesAncillaryFeeGroupNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeBaggageNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeCommissionCodeQualifiersNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeCommissionCodeQualifiersCommissionCodeQualifierNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeFareRestrictPrefNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeFrequentFlyerNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeSpanishFamilyDiscountNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsAdditionalFareLimitNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsAirServiceOnlyNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsAircraftTypePenaltyNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsAlternateAirportPenaltyNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsAvsPenaltyCrrsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsBudgetNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsContentTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsCountryPrefNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsDataSourcesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsDepPenaltyInUSDNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsDiversityParametersNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsDiversityParametersTimeOfDayDistributionNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsDiversityParametersTimeOfDayDistributionTimeOfDayRangeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsDiversityParametersWeightingsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsDomesticLayoverTimeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsDurPenaltyInUSDNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsExcludeCallDirectCarriersNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsExcludeVendorPrefNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsFareAmountThresholdNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsFareFocusRulesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsFlightRepeatLimitNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsFlightRestrictionsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsFltOptLFSReuseLimitForAVSNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsFltOptLFSReuseLimitForNonAVSNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsFltOptMustPriceReuseLimitNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsForceKeywordRestrictedContentNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsInterlineIndicatorNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsItineraryNumberThresholdNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsJetServiceOnlyNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsLongConnectPointsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsLongConnectTimeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsLowCostCarriersProcessingNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsMaxAllowedLFSOveragePerCrrPercentNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsMaxAllowedMustPriceOveragePerCrrNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsMaxNumOf2PlusStpSolNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsMaxNumOfNonStpInrlSolNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsMaxNumOfNonStpOnlSolNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsMaxNumOfSingleStpOnlSolNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsMaxPriceNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsMaxRelFareLvlOfxForCnxNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsMaxRelFareLvlOfxForNonStpNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsMinAllowedOveragePerCrrNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsMinAllowedOveragePerCrrPercentNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsMultiAirportCodesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsNumOfLowFareSolNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsNumOfMustPrice2PlusStpSolNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsNumOfMustPriceInrlSolNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsNumOfMustPriceNStp1StpInrlSolNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsNumOfMustPriceNStp1StpOnlSolNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsNumOfMustPriceNStpInrlSolNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsNumOfMustPriceNStpOnlSolNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsNumOfMustPriceOnlSolNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsNumOfMustPriceSStopOnlSolNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsNumTripsWithRoutingNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsOnlineIndicatorNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsOptionsPerDatePairListNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsPreferNDCSourceOnTieNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsSameConnectionAirportOnlyNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsSameOriginAirportOnlyNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsSameTurnaroundAirportOnlyNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsSellingLevelsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsSellingLevelsSellingLevelRulesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsSellingLevelsShowFareAmountsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsStpPenaltyInUSDNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsTargetMinNumOfLFSOnlSolPerCrrNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsTargetMinNumOfLFSTotOnlSolPercentNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsTicketingSumOfLocalsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsTripTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsUpperBoundLFSFactorNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsUpperBoundMustPriceFactorForNonStpNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsUpperBoundMustPriceFactorForNotNonStpNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsValidatingCarrierCheckNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsValidatingCarrierCheckCarrierNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsValidatingCarrierCheckCountryNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsValidatingCarrierCheckIETValidationNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsValidatingCarrierCheckSettlementValidationNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirSearchPrefsTypeTPAExtensionsVerificationItinCallLogicNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirTravelerTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirTravelerTypeFlightSegmentRPHsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirTravelerTypeProfileRefNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AirlineTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AllianceTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AltCitiesCombinationsTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AlternatePCCTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AlternatePCCTypeTravelPreferencesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AlternatePCCTypeTravelPreferencesTPAExtensionsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AlternatePCCTypeTravelPreferencesVendorPrefNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ApplyResidentDiscountTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ArunkTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305AwardShoppingTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305BaggageTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305BillingInformationTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305BrandCodePrefTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305BrandFiltersTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305BrandFiltersTypeNonBrandedFaresNormalizer();
        $normalizers[] = new OrgOpentravelOta200305BrandTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305BrandedFareIndicatorsBaseNormalizer();
        $normalizers[] = new OrgOpentravelOta200305CabinPrefTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305CachePartitionGroupTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305CachePartitionTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ClassOfServiceElemTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305CodeShareIndicatorNormalizer();
        $normalizers[] = new OrgOpentravelOta200305CompanyNamePrefTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305CompanyNameTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ConnectionTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ConnectionTypeConnectionLocationNormalizer();
        $normalizers[] = new OrgOpentravelOta200305CountryNameTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305CustLoyaltyTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DepartureDaysTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DiversityControlTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DiversityControlTypeDimensionsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DiversityControlTypeDimensionsCarrierNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DiversityControlTypeDimensionsCarrierDefaultNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DiversityControlTypeDimensionsCarrierOverrideNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DiversityControlTypeDimensionsInboundOutboundPairingNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DiversityControlTypeDimensionsOperatingDuplicateNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DiversityControlTypeDimensionsOperatingDuplicatePreferredCarrierNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DiversityControlTypeDimensionsStopsNumberNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DiversityControlTypeDimensionsTimeOfDayNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DiversityControlTypeDimensionsTimeOfDayDistributionNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DiversityControlTypeDimensionsTimeOfDayDistributionRangeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DiversityControlTypeDimensionsTravelTimeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DiversityControlTypeLowFareBucketNormalizer();
        $normalizers[] = new OrgOpentravelOta200305DocumentTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305EmailTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305EquipmentTypePrefNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeAirSearchPrefsTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeFareTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeOriginDestinationFlightTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeOriginDestinationFlightTypeFareNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeOriginDestinationFlightTypeFareAdjustmentNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeOriginDestinationInformationTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeOriginDestinationInformationTypeAlternateTimeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeOriginDestinationInformationTypeConnectionTimeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeOriginDestinationInformationTypeDateFlexibilityNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeOriginDestinationInformationTypeMaxOneWayOptionsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeOriginDestinationInformationTypeNumOneWayOptionsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeOriginDestinationInformationTypeSegmentTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeOriginDestinationInformationTypeSisterDestinationMileageNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeOriginDestinationInformationTypeSisterOriginMileageNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeOriginDestinationInformationTypeTotalTravelTimeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangePOSTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeSettingsTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeSourceTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeTPAExtensionsTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeTravelPreferencesTPAExtensionsTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeTravelPreferencesTPAExtensionsTypeExemptAllTaxesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeTravelPreferencesTPAExtensionsTypeExemptAllTaxesAndFeesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeTravelPreferencesTPAExtensionsTypeTaxesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ExchangeTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FareBasisTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FareOptionalDetailsTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FareTypePrefTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersAccountCodeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersCabinNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersCorporateIDNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersExcludeRestrictedNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersLegNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersLegCabinNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersMinMaxStayNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersNegotiatedFaresOnlyNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersPassengerTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersPrivateFareNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersPublicFareNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersRefundPenaltyNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersResTicketingNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersUseNegotiatedFaresNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersUsePassengerFaresNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlexibleFaresTypeFareParametersXOFaresNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlightStopsAsConnectionsTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305FlightTypePrefTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305GoverningCarrierOverrideTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305IncludeVendorPrefTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305InterlineBrandsTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305JumpCabinLogicTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305KeepSameCabinTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305MileageDisplayTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305NumTripsTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQOriginDestinationInformationNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQOriginDestinationInformationTPAExtensionsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensionsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensionsAlternateAirportCitiesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensionsAlternateAirportCitiesAlternateLocationNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensionsAlternateAirportCitiesSpecifiedLocationNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensionsAlternateAirportMileageNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensionsAlternateDatesProcessingNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensionsItineraryCacheNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensionsMessagingDetailsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensionsMessagingDetailsMDRSubsetNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensionsMultiTicketNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensionsPartitionsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensionsPointsRedemptionNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensionsReservationDataNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OTAAirLowFareSearchRQTPAExtensionsSplitTaxesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OptionsPerDatePairTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OriginDestinationFlightTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OriginDestinationInformationTypeDestinationLocationNormalizer();
        $normalizers[] = new OrgOpentravelOta200305OriginDestinationInformationTypeOriginLocationNormalizer();
        $normalizers[] = new OrgOpentravelOta200305POSTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PassengerPriceAdjustmentTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PassengerTypeQuantityTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PassengerTypeQuantityTypeTPAExtensionsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PassengerTypeQuantityTypeTPAExtensionsAgeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PassengerTypeQuantityTypeTPAExtensionsBirthDateNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PassengerTypeQuantityTypeTPAExtensionsStateNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PassengerTypeQuantityTypeTPAExtensionsTotalNumberNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PersonNameTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PlusUpTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PointOfSaleOverrideTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PointOfTicketingOverrideTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PositionTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceAdjustmentTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceAdjustmentTypeBaseFareNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceAdjustmentTypeEquivFareNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceAdjustmentTypeTotalFareNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceAdjustmentTypeTotalTaxNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeAccountCodeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeNegotiatedFareCodeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsBrandedFareIndicatorsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsBrandedFareIndicatorsReturnCheapestUnbrandedFareNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsCurrencyNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsCustomerTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsETicketableOverrideNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsFareAdjustmentNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsFareBreaksAtLegsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsForceCompanionNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsIATAFareNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsIndicatorsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsIndicatorsMinMaxStayNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsIndicatorsRefundPenaltyNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsIndicatorsResTicketingNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsIndicatorsRetainFareNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsIndicatorsTravelPolicyNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsMultipleTravelerGroupsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsOBFeesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPassengerStatusNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPriorityNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPriorityConnectionTimeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPriorityDepartureTimeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPriorityDirectFlightsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPriorityElapsedTimeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPriorityLegTimeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPriorityMarketingCarrierNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPriorityMarketingCarrierCarrierNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPriorityOperatingCarrierNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPriorityOperatingCarrierCarrierNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPriorityPriceNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPriorityTimeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPriorityVendorNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPrivateFareNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsPublicFareNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsUseNegotiatedFaresNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsUsePassengerFaresNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsUseReducedConstructionsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305PriceRequestInformationTypeTPAExtensionsWebFareNormalizer();
        $normalizers[] = new OrgOpentravelOta200305RequestLocationTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305RequestSpecifiedLocationTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ReservationTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305RetailerRulesTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305RetailerRulesTypeRetailerRuleNormalizer();
        $normalizers[] = new OrgOpentravelOta200305RoutingDefinitionTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305RoutingLegTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305SeatStatusSimTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305SideTripTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305SourceBookingChannelTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305SourceTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305StateProvTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305StayRestrictionsTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305StayRestrictionsTypeMaximumStayNormalizer();
        $normalizers[] = new OrgOpentravelOta200305StayRestrictionsTypeMinimumStayNormalizer();
        $normalizers[] = new OrgOpentravelOta200305StopoverTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305StopoverTypeStopoverPointNormalizer();
        $normalizers[] = new OrgOpentravelOta200305StreetNmbrTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305SurchargeTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TaxCodeAmountTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TaxCodeTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TelephoneTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TicketDistribPrefTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeATSETestNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeAirStreamingNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeAvailableLevelNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeBranchNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeClientSessionIDNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeCompressResponseNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeDiagnosticsNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeDiagnosticsDiagnosticNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeDiagnosticsDiagnosticDiagnosticArgumentNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeFareOverridesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeFareOverridesFareOverrideNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypePurchaseTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeRequestTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeResponseSortingNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeSabreAthNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeServiceTagNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeSubagentDataNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeTranIDNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TransactionTypeTravelerPersonaNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TravelDateTimeTypeArrivalDatesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TravelDateTimeTypeArrivalDatesDayNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TravelDateTimeTypeArrivalDatesDaysRangeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TravelDateTimeTypeDepartureDatesNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TravelDateTimeTypeDepartureDatesLengthOfStayNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TravelDateTimeTypeDepartureDatesLengthOfStayRangeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TravelerInfoSummaryTPAExtensionsTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TravelerInfoSummaryTPAExtensionsTypeTravelerRatingNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TravelerInfoSummaryTPAExtensionsTypeTravelerRatingFrequentFlyerNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TravelerInfoSummaryTPAExtensionsTypeTravelerRatingScoreNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TravelerInfoSummaryTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TravelerInformationTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305TravelerRefNumberTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305UniqueIDTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ValidatingCarrierTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305ValidatingCarrierTypePreferenceNormalizer();
        $normalizers[] = new OrgOpentravelOta200305VendorPrefApplicabilityTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305VendorPrefPairingTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305VendorPrefPairingTypeVendorPrefNormalizer();
        $normalizers[] = new OrgOpentravelOta200305VoluntaryChangesSMPTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305VoluntaryChangesSMPTypePenaltyNormalizer();
        $normalizers[] = new OrgOpentravelOta200305VoluntaryChangesTypeNormalizer();
        $normalizers[] = new OrgOpentravelOta200305VoluntaryChangesTypePenaltyNormalizer();
        $normalizers[] = new OrgOpentravelOta200305XOFaresTypeNormalizer();

        return $normalizers;
    }
}
