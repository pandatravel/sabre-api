<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\BargainFinderMax\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class OrgOpentravelOta200305SourceTypeNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305SourceType';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Ammonkc\SabreApi\Model\BargainFinderMax\OrgOpentravelOta200305SourceType;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\BargainFinderMax\OrgOpentravelOta200305SourceType();
        if (property_exists($data, 'AbacusUser')) {
            $object->setAbacusUser($data->{'AbacusUser'});
        }
        if (property_exists($data, 'AccountingCode')) {
            $object->setAccountingCode($data->{'AccountingCode'});
        }
        if (property_exists($data, 'AgentCity')) {
            $object->setAgentCity($data->{'AgentCity'});
        }
        if (property_exists($data, 'AgentDepartmentCode')) {
            $object->setAgentDepartmentCode($data->{'AgentDepartmentCode'});
        }
        if (property_exists($data, 'AgentDuty')) {
            $object->setAgentDuty($data->{'AgentDuty'});
        }
        if (property_exists($data, 'AgentDutyCode')) {
            $object->setAgentDutyCode($data->{'AgentDutyCode'});
        }
        if (property_exists($data, 'AgentFunction')) {
            $object->setAgentFunction($data->{'AgentFunction'});
        }
        if (property_exists($data, 'AgentIATA')) {
            $object->setAgentIATA($data->{'AgentIATA'});
        }
        if (property_exists($data, 'AgentSine')) {
            $object->setAgentSine($data->{'AgentSine'});
        }
        if (property_exists($data, 'AirlineChannelCode')) {
            $object->setAirlineChannelCode($data->{'AirlineChannelCode'});
        }
        if (property_exists($data, 'AirlineVendorID')) {
            $object->setAirlineVendorID($data->{'AirlineVendorID'});
        }
        if (property_exists($data, 'AirportCode')) {
            $object->setAirportCode($data->{'AirportCode'});
        }
        if (property_exists($data, 'BookingChannel')) {
            $object->setBookingChannel($this->denormalizer->denormalize($data->{'BookingChannel'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305SourceBookingChannelType', 'json', $context));
        }
        if (property_exists($data, 'Carrier')) {
            $object->setCarrier($data->{'Carrier'});
        }
        if (property_exists($data, 'DefaultTicketingCarrier')) {
            $object->setDefaultTicketingCarrier($data->{'DefaultTicketingCarrier'});
        }
        if (property_exists($data, 'ERSP_UserID')) {
            $object->setERSPUserID($data->{'ERSP_UserID'});
        }
        if (property_exists($data, 'FirstDepartPoint')) {
            $object->setFirstDepartPoint($data->{'FirstDepartPoint'});
        }
        if (property_exists($data, 'HomeAgencyIATA')) {
            $object->setHomeAgencyIATA($data->{'HomeAgencyIATA'});
        }
        if (property_exists($data, 'HomePCC')) {
            $object->setHomePCC($data->{'HomePCC'});
        }
        if (property_exists($data, 'ISOCountry')) {
            $object->setISOCountry($data->{'ISOCountry'});
        }
        if (property_exists($data, 'ISOCurrency')) {
            $object->setISOCurrency($data->{'ISOCurrency'});
        }
        if (property_exists($data, 'MainTravelAgencyPCC')) {
            $object->setMainTravelAgencyPCC($data->{'MainTravelAgencyPCC'});
        }
        if (property_exists($data, 'OfficeCode')) {
            $object->setOfficeCode($data->{'OfficeCode'});
        }
        if (property_exists($data, 'PersonalCityCode')) {
            $object->setPersonalCityCode($data->{'PersonalCityCode'});
        }
        if (property_exists($data, 'Position')) {
            $object->setPosition($this->denormalizer->denormalize($data->{'Position'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305PositionType', 'json', $context));
        }
        if (property_exists($data, 'PseudoCityCode')) {
            $object->setPseudoCityCode($data->{'PseudoCityCode'});
        }
        if (property_exists($data, 'RequestorID')) {
            $object->setRequestorID($this->denormalizer->denormalize($data->{'RequestorID'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305UniqueIDType', 'json', $context));
        }
        if (property_exists($data, 'TravelAgencyIATA')) {
            $object->setTravelAgencyIATA($data->{'TravelAgencyIATA'});
        }
        if (property_exists($data, 'VendorCRSCode')) {
            $object->setVendorCRSCode($data->{'VendorCRSCode'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAbacusUser()) {
            $data->{'AbacusUser'} = $object->getAbacusUser();
        }
        if (null !== $object->getAccountingCode()) {
            $data->{'AccountingCode'} = $object->getAccountingCode();
        }
        if (null !== $object->getAgentCity()) {
            $data->{'AgentCity'} = $object->getAgentCity();
        }
        if (null !== $object->getAgentDepartmentCode()) {
            $data->{'AgentDepartmentCode'} = $object->getAgentDepartmentCode();
        }
        if (null !== $object->getAgentDuty()) {
            $data->{'AgentDuty'} = $object->getAgentDuty();
        }
        if (null !== $object->getAgentDutyCode()) {
            $data->{'AgentDutyCode'} = $object->getAgentDutyCode();
        }
        if (null !== $object->getAgentFunction()) {
            $data->{'AgentFunction'} = $object->getAgentFunction();
        }
        if (null !== $object->getAgentIATA()) {
            $data->{'AgentIATA'} = $object->getAgentIATA();
        }
        if (null !== $object->getAgentSine()) {
            $data->{'AgentSine'} = $object->getAgentSine();
        }
        if (null !== $object->getAirlineChannelCode()) {
            $data->{'AirlineChannelCode'} = $object->getAirlineChannelCode();
        }
        if (null !== $object->getAirlineVendorID()) {
            $data->{'AirlineVendorID'} = $object->getAirlineVendorID();
        }
        if (null !== $object->getAirportCode()) {
            $data->{'AirportCode'} = $object->getAirportCode();
        }
        if (null !== $object->getBookingChannel()) {
            $data->{'BookingChannel'} = $this->normalizer->normalize($object->getBookingChannel(), 'json', $context);
        }
        if (null !== $object->getCarrier()) {
            $data->{'Carrier'} = $object->getCarrier();
        }
        if (null !== $object->getDefaultTicketingCarrier()) {
            $data->{'DefaultTicketingCarrier'} = $object->getDefaultTicketingCarrier();
        }
        if (null !== $object->getERSPUserID()) {
            $data->{'ERSP_UserID'} = $object->getERSPUserID();
        }
        if (null !== $object->getFirstDepartPoint()) {
            $data->{'FirstDepartPoint'} = $object->getFirstDepartPoint();
        }
        if (null !== $object->getHomeAgencyIATA()) {
            $data->{'HomeAgencyIATA'} = $object->getHomeAgencyIATA();
        }
        if (null !== $object->getHomePCC()) {
            $data->{'HomePCC'} = $object->getHomePCC();
        }
        if (null !== $object->getISOCountry()) {
            $data->{'ISOCountry'} = $object->getISOCountry();
        }
        if (null !== $object->getISOCurrency()) {
            $data->{'ISOCurrency'} = $object->getISOCurrency();
        }
        if (null !== $object->getMainTravelAgencyPCC()) {
            $data->{'MainTravelAgencyPCC'} = $object->getMainTravelAgencyPCC();
        }
        if (null !== $object->getOfficeCode()) {
            $data->{'OfficeCode'} = $object->getOfficeCode();
        }
        if (null !== $object->getPersonalCityCode()) {
            $data->{'PersonalCityCode'} = $object->getPersonalCityCode();
        }
        if (null !== $object->getPosition()) {
            $data->{'Position'} = $this->normalizer->normalize($object->getPosition(), 'json', $context);
        }
        if (null !== $object->getPseudoCityCode()) {
            $data->{'PseudoCityCode'} = $object->getPseudoCityCode();
        }
        if (null !== $object->getRequestorID()) {
            $data->{'RequestorID'} = $this->normalizer->normalize($object->getRequestorID(), 'json', $context);
        }
        if (null !== $object->getTravelAgencyIATA()) {
            $data->{'TravelAgencyIATA'} = $object->getTravelAgencyIATA();
        }
        if (null !== $object->getVendorCRSCode()) {
            $data->{'VendorCRSCode'} = $object->getVendorCRSCode();
        }

        return $data;
    }
}
