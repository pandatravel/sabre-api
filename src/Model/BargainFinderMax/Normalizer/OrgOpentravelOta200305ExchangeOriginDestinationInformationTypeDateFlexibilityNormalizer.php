<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\BargainFinderMax\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class OrgOpentravelOta200305ExchangeOriginDestinationInformationTypeDateFlexibilityNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305ExchangeOriginDestinationInformationTypeDateFlexibility';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\OrgOpentravelOta200305ExchangeOriginDestinationInformationTypeDateFlexibility';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\BargainFinderMax\OrgOpentravelOta200305ExchangeOriginDestinationInformationTypeDateFlexibility();
        if (property_exists($data, 'Minus')) {
            $object->setMinus($data->{'Minus'});
        }
        if (property_exists($data, 'NbrOfDays')) {
            $object->setNbrOfDays($data->{'NbrOfDays'});
        }
        if (property_exists($data, 'Plus')) {
            $object->setPlus($data->{'Plus'});
        }
        if (property_exists($data, 'Tolerance')) {
            $object->setTolerance($data->{'Tolerance'});
        }
        if (property_exists($data, 'Validate')) {
            $object->setValidate($data->{'Validate'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getMinus()) {
            $data->{'Minus'} = $object->getMinus();
        }
        if (null !== $object->getNbrOfDays()) {
            $data->{'NbrOfDays'} = $object->getNbrOfDays();
        }
        if (null !== $object->getPlus()) {
            $data->{'Plus'} = $object->getPlus();
        }
        if (null !== $object->getTolerance()) {
            $data->{'Tolerance'} = $object->getTolerance();
        }
        if (null !== $object->getValidate()) {
            $data->{'Validate'} = $object->getValidate();
        }

        return $data;
    }
}
