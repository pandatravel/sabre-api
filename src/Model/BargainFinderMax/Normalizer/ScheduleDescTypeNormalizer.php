<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\BargainFinderMax\Normalizer;

use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class ScheduleDescTypeNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\ScheduleDescType';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\ScheduleDescType';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            return null;
        }
        $object = new \Ammonkc\SabreApi\Model\BargainFinderMax\ScheduleDescType();
        if (property_exists($data, 'arrival') && $data->{'arrival'} !== null) {
            $object->setArrival($this->denormalizer->denormalize($data->{'arrival'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\Arrival', 'json', $context));
        }
        if (property_exists($data, 'bookingDetails') && $data->{'bookingDetails'} !== null) {
            $object->setBookingDetails($this->denormalizer->denormalize($data->{'bookingDetails'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\BookingDetails', 'json', $context));
        }
        if (property_exists($data, 'carrier') && $data->{'carrier'} !== null) {
            $object->setCarrier($this->denormalizer->denormalize($data->{'carrier'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\Carrier', 'json', $context));
        }
        if (property_exists($data, 'departure') && $data->{'departure'} !== null) {
            $object->setDeparture($this->denormalizer->denormalize($data->{'departure'}, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\Departure', 'json', $context));
        }
        if (property_exists($data, 'dotRating') && $data->{'dotRating'} !== null) {
            $object->setDotRating($data->{'dotRating'});
        }
        if (property_exists($data, 'eTicketable') && $data->{'eTicketable'} !== null) {
            $object->setETicketable($data->{'eTicketable'});
        }
        if (property_exists($data, 'flightStatused') && $data->{'flightStatused'} !== null) {
            $object->setFlightStatused($data->{'flightStatused'});
        }
        if (property_exists($data, 'frequency') && $data->{'frequency'} !== null) {
            $object->setFrequency($data->{'frequency'});
        }
        if (property_exists($data, 'funnel') && $data->{'funnel'} !== null) {
            $object->setFunnel($data->{'funnel'});
        }
        if (property_exists($data, 'governmentApproval') && $data->{'governmentApproval'} !== null) {
            $object->setGovernmentApproval($data->{'governmentApproval'});
        }
        if (property_exists($data, 'hiddenStops') && $data->{'hiddenStops'} !== null) {
            $values = [];
            foreach ($data->{'hiddenStops'} as $value) {
                $values[] = $this->denormalizer->denormalize($value, 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\HiddenStopType', 'json', $context);
            }
            $object->setHiddenStops($values);
        }
        if (property_exists($data, 'id') && $data->{'id'} !== null) {
            $object->setId($data->{'id'});
        }
        if (property_exists($data, 'message') && $data->{'message'} !== null) {
            $object->setMessage($data->{'message'});
        }
        if (property_exists($data, 'messageType') && $data->{'messageType'} !== null) {
            $object->setMessageType($data->{'messageType'});
        }
        if (property_exists($data, 'onTimePerformance') && $data->{'onTimePerformance'} !== null) {
            $object->setOnTimePerformance($data->{'onTimePerformance'});
        }
        if (property_exists($data, 'smokingAllowed') && $data->{'smokingAllowed'} !== null) {
            $object->setSmokingAllowed($data->{'smokingAllowed'});
        }
        if (property_exists($data, 'stopCount') && $data->{'stopCount'} !== null) {
            $object->setStopCount($data->{'stopCount'});
        }
        if (property_exists($data, 'totalMilesFlown') && $data->{'totalMilesFlown'} !== null) {
            $object->setTotalMilesFlown($data->{'totalMilesFlown'});
        }
        if (property_exists($data, 'trafficRestriction') && $data->{'trafficRestriction'} !== null) {
            $object->setTrafficRestriction($data->{'trafficRestriction'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getArrival()) {
            $data->{'arrival'} = $this->normalizer->normalize($object->getArrival(), 'json', $context);
        }
        if (null !== $object->getBookingDetails()) {
            $data->{'bookingDetails'} = $this->normalizer->normalize($object->getBookingDetails(), 'json', $context);
        }
        if (null !== $object->getCarrier()) {
            $data->{'carrier'} = $this->normalizer->normalize($object->getCarrier(), 'json', $context);
        }
        if (null !== $object->getDeparture()) {
            $data->{'departure'} = $this->normalizer->normalize($object->getDeparture(), 'json', $context);
        }
        if (null !== $object->getDotRating()) {
            $data->{'dotRating'} = $object->getDotRating();
        }
        if (null !== $object->getETicketable()) {
            $data->{'eTicketable'} = $object->getETicketable();
        }
        if (null !== $object->getFlightStatused()) {
            $data->{'flightStatused'} = $object->getFlightStatused();
        }
        if (null !== $object->getFrequency()) {
            $data->{'frequency'} = $object->getFrequency();
        }
        if (null !== $object->getFunnel()) {
            $data->{'funnel'} = $object->getFunnel();
        }
        if (null !== $object->getGovernmentApproval()) {
            $data->{'governmentApproval'} = $object->getGovernmentApproval();
        }
        if (null !== $object->getHiddenStops()) {
            $values = [];
            foreach ($object->getHiddenStops() as $value) {
                $values[] = $this->normalizer->normalize($value, 'json', $context);
            }
            $data->{'hiddenStops'} = $values;
        }
        if (null !== $object->getId()) {
            $data->{'id'} = $object->getId();
        }
        if (null !== $object->getMessage()) {
            $data->{'message'} = $object->getMessage();
        }
        if (null !== $object->getMessageType()) {
            $data->{'messageType'} = $object->getMessageType();
        }
        if (null !== $object->getOnTimePerformance()) {
            $data->{'onTimePerformance'} = $object->getOnTimePerformance();
        }
        if (null !== $object->getSmokingAllowed()) {
            $data->{'smokingAllowed'} = $object->getSmokingAllowed();
        }
        if (null !== $object->getStopCount()) {
            $data->{'stopCount'} = $object->getStopCount();
        }
        if (null !== $object->getTotalMilesFlown()) {
            $data->{'totalMilesFlown'} = $object->getTotalMilesFlown();
        }
        if (null !== $object->getTrafficRestriction()) {
            $data->{'trafficRestriction'} = $object->getTrafficRestriction();
        }

        return $data;
    }
}
