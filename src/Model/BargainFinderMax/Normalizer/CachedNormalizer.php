<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Ammonkc\SabreApi\Model\BargainFinderMax\Normalizer;

use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class CachedNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\Cached';
    }

    public function supportsNormalization($data, $format = null)
    {
        return get_class($data) === 'Ammonkc\\SabreApi\\Model\\BargainFinderMax\\Cached';
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        $object = new \Ammonkc\SabreApi\Model\BargainFinderMax\Cached();
        if (property_exists($data, 'hoursSinceCreation')) {
            $object->setHoursSinceCreation($data->{'hoursSinceCreation'});
        }
        if (property_exists($data, 'ref')) {
            $object->setRef($data->{'ref'});
        }
        if (property_exists($data, 'timeToLive')) {
            $object->setTimeToLive($data->{'timeToLive'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getHoursSinceCreation()) {
            $data->{'hoursSinceCreation'} = $object->getHoursSinceCreation();
        }
        if (null !== $object->getRef()) {
            $data->{'ref'} = $object->getRef();
        }
        if (null !== $object->getTimeToLive()) {
            $data->{'timeToLive'} = $object->getTimeToLive();
        }

        return $data;
    }
}
